<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.10 on darwin)" generated="20220718 11:15:52.828" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/Users/admin/Downloads/assign/Cognizant/Oppenheimer/testsuites">
<suite id="s1-s1" name="Api" source="/Users/admin/Downloads/assign/Cognizant/Oppenheimer/testsuites/api">
<suite id="s1-s1-s1" name="CalculatorApiTestsuite" source="/Users/admin/Downloads/assign/Cognizant/Oppenheimer/testsuites/api/CalculatorApiTestsuite.robot">
<test id="s1-s1-s1-t1" name="As the Clerk, I can insert a single record of working class hero into database via an API successfully" line="10">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.271" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.270" endtime="20220718 11:15:54.271"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.272" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.271" endtime="20220718 11:15:54.272"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.285" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.285" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.272" endtime="20220718 11:15:54.286"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.270" endtime="20220718 11:15:54.286"/>
</kw>
<kw name="Generate A Random Birthday" library="CommonSteps">
<var>${birthday}</var>
<doc>This keyword is used for genarating a random birthday which age &gt;=18 and age&lt;=80</doc>
<kw name="Date Of Birth" library="FakerLibrary">
<var>${date}</var>
<arg>minimum_age=18</arg>
<arg>maximum_age=80</arg>
<doc>Generate a random date of birth represented as a Date object,
constrained by optional miminimum_age and maximum_age
parameters.</doc>
<msg timestamp="20220718 11:15:54.288" level="INFO">${date} = 1995-04-15</msg>
<status status="PASS" starttime="20220718 11:15:54.287" endtime="20220718 11:15:54.288"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220718 11:15:54.288" level="INFO">${date} = 1995-04-15</msg>
<status status="PASS" starttime="20220718 11:15:54.288" endtime="20220718 11:15:54.288"/>
</kw>
<kw name="Split String" library="String">
<var>${arr}</var>
<arg>${date}</arg>
<arg>separator=-</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20220718 11:15:54.289" level="INFO">${arr} = ['1995', '04', '15']</msg>
<status status="PASS" starttime="20220718 11:15:54.288" endtime="20220718 11:15:54.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${arr[2]}${arr[1]}${arr[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.291" level="INFO">${birthday} = 15041995</msg>
<status status="PASS" starttime="20220718 11:15:54.289" endtime="20220718 11:15:54.291"/>
</kw>
<msg timestamp="20220718 11:15:54.291" level="INFO">${birthday} = 15041995</msg>
<status status="PASS" starttime="20220718 11:15:54.286" endtime="20220718 11:15:54.291"/>
</kw>
<kw name="Generate A Random Name" library="CommonSteps">
<var>${name}</var>
<doc>This keyword is used for genarating a random name</doc>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220718 11:15:54.292" level="INFO">${name} = David Miller</msg>
<status status="PASS" starttime="20220718 11:15:54.291" endtime="20220718 11:15:54.292"/>
</kw>
<msg timestamp="20220718 11:15:54.292" level="INFO">${name} = David Miller</msg>
<status status="PASS" starttime="20220718 11:15:54.291" endtime="20220718 11:15:54.292"/>
</kw>
<kw name="Generate A Random Gender" library="CommonSteps">
<var>${gender}</var>
<doc>This keyword is used for genarating a random gender, only return 'M' or 'F'</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${gender}</var>
<arg>random.choice(['M', 'F'])</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.293" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.293" endtime="20220718 11:15:54.293"/>
</kw>
<msg timestamp="20220718 11:15:54.294" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.293" endtime="20220718 11:15:54.294"/>
</kw>
<kw name="Generate A Random Natural ID Code" library="CommonSteps">
<var>${natid}</var>
<arg>${name}</arg>
<doc>This keyword is used for genarating a random natural ID , actually it will return an unique email.</doc>
<kw name="Free Email Domain" library="FakerLibrary">
<var>${email_domain}</var>
<msg timestamp="20220718 11:15:54.294" level="INFO">${email_domain} = yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.294" endtime="20220718 11:15:54.294"/>
</kw>
<kw name="Replace String" library="String">
<var>${p_name}</var>
<arg>${p_name}</arg>
<arg>${SPACE}</arg>
<arg>.</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220718 11:15:54.295" level="INFO">${p_name} = David.Miller</msg>
<status status="PASS" starttime="20220718 11:15:54.295" endtime="20220718 11:15:54.295"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${epoch_time}</var>
<arg>int(time.time())</arg>
<arg>time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.295" level="INFO">${epoch_time} = 1658117754</msg>
<status status="PASS" starttime="20220718 11:15:54.295" endtime="20220718 11:15:54.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${email}</var>
<arg>${p_name}_${epoch_time}@${email_domain}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.296" level="INFO">${email} = David.Miller_1658117754@yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.296" endtime="20220718 11:15:54.296"/>
</kw>
<msg timestamp="20220718 11:15:54.296" level="INFO">${natid} = David.Miller_1658117754@yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.294" endtime="20220718 11:15:54.296"/>
</kw>
<kw name="Generate A Random Salary" library="CommonSteps">
<var>${salary}</var>
<doc>This keyword is used for genarating a random salary, salary will in range 3,000 (USD) to 30,000 (USD)</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${salary}</var>
<arg>random.randint(3000,30000)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.297" level="INFO">${salary} = 18440</msg>
<status status="PASS" starttime="20220718 11:15:54.297" endtime="20220718 11:15:54.297"/>
</kw>
<msg timestamp="20220718 11:15:54.297" level="INFO">${salary} = 18440</msg>
<status status="PASS" starttime="20220718 11:15:54.296" endtime="20220718 11:15:54.297"/>
</kw>
<kw name="Generate A Tax Base On Salary" library="CommonSteps">
<var>${tax}</var>
<arg>${salary}</arg>
<doc>This keyword is used for genarating a tax based on the salary provide as paramter
if salary &lt;4,000 then tax percent is 0% of salary, mean they dont have to pay tax
if 4,000 &lt;= salary &lt;10,000 then tax percent is 10% of salary
if 10,000 &lt;= salary &lt;20,000 then tax percent is 20% of salary
rest, if salary ablove 20,000 then tax percent is 30% of salary
first we will count tax percent base on the salary then , we will count the tax amount and round to integer and return.</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.298" level="INFO">${tax_percent} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.298" endtime="20220718 11:15:54.298"/>
</kw>
<if>
<branch type="IF" condition="${p_salary} &lt; 4000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.299"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.299"/>
</branch>
<branch type="ELSE IF" condition="${p_salary} &gt;= 4000 and ${p_salary} &lt; 10000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.299"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.299"/>
</branch>
<branch type="ELSE IF" condition="${p_salary} &gt;= 10000 and ${p_salary} &lt; 20000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>20</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.300" level="INFO">${tax_percent} = 20</msg>
<status status="PASS" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.300"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.299" endtime="20220718 11:15:54.300"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>30</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.300" endtime="20220718 11:15:54.300"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.300" endtime="20220718 11:15:54.300"/>
</branch>
<status status="PASS" starttime="20220718 11:15:54.298" endtime="20220718 11:15:54.300"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${tax_amount}</var>
<arg>${tax_percent} * ${p_salary} / 100</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.300" level="INFO">${tax_amount} = 3688.0</msg>
<status status="PASS" starttime="20220718 11:15:54.300" endtime="20220718 11:15:54.300"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${tax_amount}</var>
<arg>${tax_amount}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220718 11:15:54.301" level="INFO">${tax_amount} = 3688</msg>
<status status="PASS" starttime="20220718 11:15:54.301" endtime="20220718 11:15:54.301"/>
</kw>
<msg timestamp="20220718 11:15:54.301" level="INFO">${tax} = 3688</msg>
<status status="PASS" starttime="20220718 11:15:54.298" endtime="20220718 11:15:54.301"/>
</kw>
<kw name="Make POST Request To Insert A Person" library="CalculatorApiSteps">
<var>${response}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>This keyword is used for sending a POST request to create new person</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.302" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.302" endtime="20220718 11:15:54.302"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.303" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.303" endtime="20220718 11:15:54.303"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${json}</var>
<arg>birthday=${p_birthday}</arg>
<arg>gender=${p_gender}</arg>
<arg>name=${p_name}</arg>
<arg>natid=${p_natid}</arg>
<arg>salary=${p_salary}</arg>
<arg>tax=${p_tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.304" level="INFO">${json} = {'birthday': '15041995', 'gender': 'M', 'name': 'David Miller', 'natid': 'David.Miller_1658117754@yahoo.com', 'salary': 18440, 'tax': 3688}</msg>
<status status="PASS" starttime="20220718 11:15:54.303" endtime="20220718 11:15:54.304"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_CALCULATOR_INSERT}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.311" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '139'} 
 body=b'{"birthday": "15041995", "gender": "M", "name": "David Miller", "natid": "David.Miller_1658117754@yahoo.com", "salary": 18440, "tax": 3688}' 
 </msg>
<msg timestamp="20220718 11:15:54.311" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220718 11:15:54.311" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.304" endtime="20220718 11:15:54.311"/>
</kw>
<msg timestamp="20220718 11:15:54.311" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.301" endtime="20220718 11:15:54.312"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.313" level="INFO">${code} = 202</msg>
<status status="PASS" starttime="20220718 11:15:54.312" endtime="20220718 11:15:54.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.314" level="INFO">${content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.313" endtime="20220718 11:15:54.314"/>
</kw>
<msg timestamp="20220718 11:15:54.314" level="INFO">${actual_code} = 202</msg>
<msg timestamp="20220718 11:15:54.314" level="INFO">${actual_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.312" endtime="20220718 11:15:54.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_status}</var>
<arg>202</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.315" level="INFO">${expected_status} = 202</msg>
<status status="PASS" starttime="20220718 11:15:54.315" endtime="20220718 11:15:54.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_content}</var>
<arg>Alright</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.315" level="INFO">${expected_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.315" endtime="20220718 11:15:54.315"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>${expected_status}</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.316" endtime="20220718 11:15:54.316"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.315" endtime="20220718 11:15:54.317"/>
</kw>
<kw name="Assert Response Content Is Correct" library="CommonSteps">
<arg>${expected_content}</arg>
<arg>${actual_content}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_content}'=='${p_actual_content}'</arg>
<arg>msg=Response return is not correct! Expected '${p_expected_content}' but Actual: '${p_actual_content}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.317" endtime="20220718 11:15:54.318"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.317" endtime="20220718 11:15:54.318"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.319" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.319" endtime="20220718 11:15:54.319"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.320" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.319" endtime="20220718 11:15:54.320"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.327" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.327" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[{"natid":"Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"David Miller","relief":"11801.61"}] 
 </msg>
<msg timestamp="20220718 11:15:54.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.320" endtime="20220718 11:15:54.327"/>
</kw>
<msg timestamp="20220718 11:15:54.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.318" endtime="20220718 11:15:54.328"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.329" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.328" endtime="20220718 11:15:54.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.330" level="INFO">${content} = [{"natid":"Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"David Miller","relief":"11801.61"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.329" endtime="20220718 11:15:54.330"/>
</kw>
<msg timestamp="20220718 11:15:54.330" level="INFO">${actual_code} = 200</msg>
<msg timestamp="20220718 11:15:54.330" level="INFO">${actual_content} = [{"natid":"Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"David Miller","relief":"11801.61"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.328" endtime="20220718 11:15:54.330"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${person}</var>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.331" level="INFO">${person} = {'name': 'David Miller', 'natid': 'David.Miller_1658117754@yahoo.com', 'birthday': '15041995', 'gender': 'M', 'salary': 18440, 'tax': 3688}</msg>
<status status="PASS" starttime="20220718 11:15:54.330" endtime="20220718 11:15:54.331"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{list_person}</var>
<arg>${person}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220718 11:15:54.332" level="INFO">@{list_person} = [ {'name': 'David Miller', 'natid': 'David.Miller_1658117754@yahoo.com', 'birthday': '15041995', 'gender': 'M', 'salary': 18440, 'tax': 3688} ]</msg>
<status status="PASS" starttime="20220718 11:15:54.331" endtime="20220718 11:15:54.332"/>
</kw>
<kw name="Assert Insert Person To Database Successfully" library="CalculatorApiSteps">
<arg>${actual_content}</arg>
<arg>${list_person}</arg>
<doc>This keyword is used for validating if sending post request to insert 1 or multiple person successfully via checking api chekcing</doc>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_api_response_content_tax_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.333" level="INFO">${json} = [{'natid': 'Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'David Miller', 'relief': '11801.61'}]</msg>
<status status="PASS" starttime="20220718 11:15:54.332" endtime="20220718 11:15:54.333"/>
</kw>
<for flavor="IN">
<var>${person}</var>
<value>@{p_list_expected_person}</value>
<iter>
<var name="${person}">{'name': 'David Miller', 'natid': 'David.Miller_1658117754@yahoo.com', 'birthday': '15041995', 'gender': 'M', 'salary': 18440, 'tax': 3688}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.334" level="INFO">${expected_name} = David Miller</msg>
<status status="PASS" starttime="20220718 11:15:54.333" endtime="20220718 11:15:54.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.335" level="INFO">${expected_natid} = David.Miller_1658117754@yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.334" endtime="20220718 11:15:54.335"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'David Miller', 'relief': '11801.61'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.361" level="INFO">${actual_natid} = ['Davi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.335" endtime="20220718 11:15:54.361"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.380" level="INFO">${actual_name} = ['David Miller']</msg>
<status status="PASS" starttime="20220718 11:15:54.362" endtime="20220718 11:15:54.380"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.382" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:15:54.381" endtime="20220718 11:15:54.382"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:15:54.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:15:54.382" endtime="20220718 11:15:54.382"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.335" endtime="20220718 11:15:54.382"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.335" endtime="20220718 11:15:54.382"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.382" endtime="20220718 11:15:54.384"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.333" endtime="20220718 11:15:54.384"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.333" endtime="20220718 11:15:54.384"/>
</for>
<status status="PASS" starttime="20220718 11:15:54.332" endtime="20220718 11:15:54.384"/>
</kw>
<doc>This test case is used for test api insert a working class hero into DB via API
Pre-condition: we will send request to clear our database first.
Step 1: we need to generate some random data like: birthday, name, gender, natid, salary and tax.
Step 2: we send request api insert 1 working hero class
Step 3: we will got response status code and response content from response of step 2
Step 4: assert the status code is 202 and content is 'Alright'
Step 5: we will send request to get tax relief, we will have a list a tax relief
Step 6: we will velidate if our data insert (on step 1: name, natid) exist on the list relief of step 5.</doc>
<tag>api</tag>
<tag>calculator</tag>
<status status="PASS" starttime="20220718 11:15:54.267" endtime="20220718 11:15:54.384"/>
</test>
<test id="s1-s1-s1-t2" name="As the Clerk, I can insert more than one working class hero into database via an API successfully" line="39">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.388" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.388" endtime="20220718 11:15:54.388"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.388" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.388" endtime="20220718 11:15:54.388"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.394" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.395" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.389" endtime="20220718 11:15:54.395"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.388" endtime="20220718 11:15:54.395"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number}</var>
<arg>random.randint(2,5)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.395" level="INFO">${number} = 2</msg>
<status status="PASS" starttime="20220718 11:15:54.395" endtime="20220718 11:15:54.395"/>
</kw>
<kw name="Generate List Random Person" library="CommonSteps">
<var>${list_person}</var>
<arg>${number}</arg>
<kw name="Generate Random List Working Class Hero" library="hero_utils">
<var>${list_person}</var>
<arg>${p_number_of_person}</arg>
<msg timestamp="20220718 11:15:54.397" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x103739c70&gt;, &lt;models.hero.WorkingClassHero object at 0x103739c40&gt;]</msg>
<status status="PASS" starttime="20220718 11:15:54.396" endtime="20220718 11:15:54.397"/>
</kw>
<msg timestamp="20220718 11:15:54.397" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x103739c70&gt;, &lt;models.hero.WorkingClassHero object at 0x103739c40&gt;]</msg>
<status status="PASS" starttime="20220718 11:15:54.396" endtime="20220718 11:15:54.397"/>
</kw>
<kw name="Make POST Request To Insert Multple Person" library="CalculatorApiSteps">
<var>${response}</var>
<arg>${list_person}</arg>
<doc>This keyword is used for sending a POST request to create multiple person</doc>
<kw name="Send Post Request To Insert Multiple Working Hero" library="custom_request">
<var>${response}</var>
<arg>${BASE_URL}</arg>
<arg>${URI_CALCULATOR_INSERT_MULTIPLE}</arg>
<arg>${p_list_person}</arg>
<msg timestamp="20220718 11:15:54.409" level="INFO">&lt;class 'str'&gt;</msg>
<msg timestamp="20220718 11:15:54.409" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.398" endtime="20220718 11:15:54.409"/>
</kw>
<msg timestamp="20220718 11:15:54.409" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.397" endtime="20220718 11:15:54.409"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.411" level="INFO">${code} = 202</msg>
<status status="PASS" starttime="20220718 11:15:54.410" endtime="20220718 11:15:54.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.411" level="INFO">${content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.411" endtime="20220718 11:15:54.411"/>
</kw>
<msg timestamp="20220718 11:15:54.412" level="INFO">${actual_code} = 202</msg>
<msg timestamp="20220718 11:15:54.412" level="INFO">${actual_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.410" endtime="20220718 11:15:54.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_status}</var>
<arg>202</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.412" level="INFO">${expected_status} = 202</msg>
<status status="PASS" starttime="20220718 11:15:54.412" endtime="20220718 11:15:54.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_content}</var>
<arg>Alright</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.413" level="INFO">${expected_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.412" endtime="20220718 11:15:54.413"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>${expected_status}</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.413" endtime="20220718 11:15:54.414"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.413" endtime="20220718 11:15:54.414"/>
</kw>
<kw name="Assert Response Content Is Correct" library="CommonSteps">
<arg>${expected_content}</arg>
<arg>${actual_content}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_content}'=='${p_actual_content}'</arg>
<arg>msg=Response return is not correct! Expected '${p_expected_content}' but Actual: '${p_actual_content}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.415" endtime="20220718 11:15:54.416"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.414" endtime="20220718 11:15:54.416"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response_tax_relief}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.416" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.416" endtime="20220718 11:15:54.417"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.417" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.417" endtime="20220718 11:15:54.417"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.425" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.425" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[{"natid":"Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Daniel Villanueva","relief":"12433.74"},{"natid":"Will$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Willie Lamb","relief":"7889.92"}] 
 </msg>
<msg timestamp="20220718 11:15:54.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.417" endtime="20220718 11:15:54.425"/>
</kw>
<msg timestamp="20220718 11:15:54.425" level="INFO">${response_tax_relief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.416" endtime="20220718 11:15:54.425"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code_tax_relief}</var>
<var>${actual_content_tax_relief}</var>
<arg>${response_tax_relief}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.427" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.426" endtime="20220718 11:15:54.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.427" level="INFO">${content} = [{"natid":"Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Daniel Villanueva","relief":"12433.74"},{"natid":"Will$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Willie Lamb","relief":"7889.92"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.427" endtime="20220718 11:15:54.427"/>
</kw>
<msg timestamp="20220718 11:15:54.428" level="INFO">${actual_code_tax_relief} = 200</msg>
<msg timestamp="20220718 11:15:54.428" level="INFO">${actual_content_tax_relief} = [{"natid":"Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Daniel Villanueva","relief":"12433.74"},{"natid":"Will$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Willie Lamb","relief":"7889.92"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.426" endtime="20220718 11:15:54.428"/>
</kw>
<kw name="Assert Insert Person To Database Successfully" library="CalculatorApiSteps">
<arg>${actual_content_tax_relief}</arg>
<arg>${list_person}</arg>
<doc>This keyword is used for validating if sending post request to insert 1 or multiple person successfully via checking api chekcing</doc>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_api_response_content_tax_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.429" level="INFO">${json} = [{'natid': 'Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Daniel Villanueva', 'relief': '12433.74'}, {'natid': 'Will$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Willie Lamb', 'relief': '7889.92'...</msg>
<status status="PASS" starttime="20220718 11:15:54.428" endtime="20220718 11:15:54.429"/>
</kw>
<for flavor="IN">
<var>${person}</var>
<value>@{p_list_expected_person}</value>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103739c70&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.430" level="INFO">${expected_name} = Daniel Villanueva</msg>
<status status="PASS" starttime="20220718 11:15:54.429" endtime="20220718 11:15:54.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.430" level="INFO">${expected_natid} = Daniel_Villanueva1658117754@lawrence-wright.com</msg>
<status status="PASS" starttime="20220718 11:15:54.430" endtime="20220718 11:15:54.430"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Daniel Villanueva', 'relief': '12433.74'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.451" level="INFO">${actual_natid} = ['Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.431" endtime="20220718 11:15:54.451"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.468" level="INFO">${actual_name} = ['Daniel Villanueva']</msg>
<status status="PASS" starttime="20220718 11:15:54.451" endtime="20220718 11:15:54.469"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.470" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:15:54.469" endtime="20220718 11:15:54.470"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:15:54.470" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:15:54.470" endtime="20220718 11:15:54.470"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.431" endtime="20220718 11:15:54.470"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.430" endtime="20220718 11:15:54.470"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.470" endtime="20220718 11:15:54.471"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.429" endtime="20220718 11:15:54.471"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103739c40&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.472" level="INFO">${expected_name} = Willie Lamb</msg>
<status status="PASS" starttime="20220718 11:15:54.472" endtime="20220718 11:15:54.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.473" level="INFO">${expected_natid} = Willie_Lamb1658117754@bush.com</msg>
<status status="PASS" starttime="20220718 11:15:54.472" endtime="20220718 11:15:54.473"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Daniel Villanueva', 'relief': '12433.74'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.491" level="INFO">${actual_natid} = ['Dani$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.473" endtime="20220718 11:15:54.491"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.508" level="INFO">${actual_name} = ['Daniel Villanueva']</msg>
<status status="PASS" starttime="20220718 11:15:54.491" endtime="20220718 11:15:54.508"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.509" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:15:54.508" endtime="20220718 11:15:54.509"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:15:54.509" endtime="20220718 11:15:54.509"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.473" endtime="20220718 11:15:54.509"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Will$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Willie Lamb', 'relief': '7889.92'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.526" level="INFO">${actual_natid} = ['Will$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.509" endtime="20220718 11:15:54.526"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.543" level="INFO">${actual_name} = ['Willie Lamb']</msg>
<status status="PASS" starttime="20220718 11:15:54.526" endtime="20220718 11:15:54.543"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.544" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:15:54.544" endtime="20220718 11:15:54.544"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:15:54.545" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:15:54.544" endtime="20220718 11:15:54.545"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.509" endtime="20220718 11:15:54.545"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.473" endtime="20220718 11:15:54.545"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.545" endtime="20220718 11:15:54.546"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.472" endtime="20220718 11:15:54.546"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.429" endtime="20220718 11:15:54.546"/>
</for>
<status status="PASS" starttime="20220718 11:15:54.428" endtime="20220718 11:15:54.546"/>
</kw>
<doc>This test case is used for test api insert multiple working class hero into DB via API
Pre-condition: we will send request to clear our database first.
Step 1: we need to generate list of number person we will insert.
Step 2: we send request api insert list working hero class on step 1
Step 3: we will got response status code and response content from response of step 2
Step 4: assert the status code is 202 and content is 'Alright'
Step 5: we will send request to get tax relief, we will have a list a tax relief
Step 6: we will velidate if our data insert (on step 1: name, natid) exist on the list relief of step 5.</doc>
<tag>api</tag>
<tag>calculator</tag>
<status status="PASS" starttime="20220718 11:15:54.386" endtime="20220718 11:15:54.547"/>
</test>
<test id="s1-s1-s1-t3" name="As the Bookkeeper I can query the amount of tax relief for each person in the database via API successfully" line="62">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.551" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.550" endtime="20220718 11:15:54.551"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.551" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.551" endtime="20220718 11:15:54.551"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.557" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.557" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.551" endtime="20220718 11:15:54.558"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.550" endtime="20220718 11:15:54.558"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number}</var>
<arg>random.randint(2,10)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.558" level="INFO">${number} = 2</msg>
<status status="PASS" starttime="20220718 11:15:54.558" endtime="20220718 11:15:54.558"/>
</kw>
<kw name="Generate List Random Person" library="CommonSteps">
<var>${list_person}</var>
<arg>${number}</arg>
<kw name="Generate Random List Working Class Hero" library="hero_utils">
<var>${list_person}</var>
<arg>${p_number_of_person}</arg>
<msg timestamp="20220718 11:15:54.559" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x1037398b0&gt;, &lt;models.hero.WorkingClassHero object at 0x103739760&gt;]</msg>
<status status="PASS" starttime="20220718 11:15:54.559" endtime="20220718 11:15:54.559"/>
</kw>
<msg timestamp="20220718 11:15:54.560" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x1037398b0&gt;, &lt;models.hero.WorkingClassHero object at 0x103739760&gt;]</msg>
<status status="PASS" starttime="20220718 11:15:54.558" endtime="20220718 11:15:54.560"/>
</kw>
<kw name="Make POST Request To Insert Multple Person" library="CalculatorApiSteps">
<var>${response}</var>
<arg>${list_person}</arg>
<doc>This keyword is used for sending a POST request to create multiple person</doc>
<kw name="Send Post Request To Insert Multiple Working Hero" library="custom_request">
<var>${response}</var>
<arg>${BASE_URL}</arg>
<arg>${URI_CALCULATOR_INSERT_MULTIPLE}</arg>
<arg>${p_list_person}</arg>
<msg timestamp="20220718 11:15:54.566" level="INFO">&lt;class 'str'&gt;</msg>
<msg timestamp="20220718 11:15:54.566" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.560" endtime="20220718 11:15:54.566"/>
</kw>
<msg timestamp="20220718 11:15:54.567" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.560" endtime="20220718 11:15:54.567"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.568" level="INFO">${code} = 202</msg>
<status status="PASS" starttime="20220718 11:15:54.567" endtime="20220718 11:15:54.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.568" level="INFO">${content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.568" endtime="20220718 11:15:54.569"/>
</kw>
<msg timestamp="20220718 11:15:54.569" level="INFO">${actual_code} = 202</msg>
<msg timestamp="20220718 11:15:54.569" level="INFO">${actual_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:15:54.567" endtime="20220718 11:15:54.569"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>202</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.569" endtime="20220718 11:15:54.570"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.569" endtime="20220718 11:15:54.570"/>
</kw>
<kw name="Assert Response Content Is Correct" library="CommonSteps">
<arg>Alright</arg>
<arg>${actual_content}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_content}'=='${p_actual_content}'</arg>
<arg>msg=Response return is not correct! Expected '${p_expected_content}' but Actual: '${p_actual_content}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.571" endtime="20220718 11:15:54.571"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.570" endtime="20220718 11:15:54.571"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.572" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.572" endtime="20220718 11:15:54.572"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.573" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.572" endtime="20220718 11:15:54.573"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.580" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.580" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[{"natid":"Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Jamie Nguyen","relief":"5971.00"},{"natid":"Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Michael Washington","relief":"8296.00"}] 
 </msg>
<msg timestamp="20220718 11:15:54.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.573" endtime="20220718 11:15:54.580"/>
</kw>
<msg timestamp="20220718 11:15:54.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.571" endtime="20220718 11:15:54.581"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.582" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.581" endtime="20220718 11:15:54.582"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.582" level="INFO">${content} = [{"natid":"Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Jamie Nguyen","relief":"5971.00"},{"natid":"Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Michael Washington","relief":"8296.00"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.582" endtime="20220718 11:15:54.583"/>
</kw>
<msg timestamp="20220718 11:15:54.583" level="INFO">${code} = 200</msg>
<msg timestamp="20220718 11:15:54.583" level="INFO">${actual_content} = [{"natid":"Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Jamie Nguyen","relief":"5971.00"},{"natid":"Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Michael Washington","relief":"8296.00"}]</msg>
<status status="PASS" starttime="20220718 11:15:54.581" endtime="20220718 11:15:54.583"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>202</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.583" endtime="20220718 11:15:54.584"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.583" endtime="20220718 11:15:54.584"/>
</kw>
<kw name="Assert Tax Relief Amount Computation Is Correct" library="CalculatorApiSteps">
<arg>${actual_content}</arg>
<arg>${list_person}</arg>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_response_content_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.585" level="INFO">${json} = [{'natid': 'Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Jamie Nguyen', 'relief': '5971.00'}, {'natid': 'Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Michael Washington', 'relief': '8296....</msg>
<status status="PASS" starttime="20220718 11:15:54.585" endtime="20220718 11:15:54.585"/>
</kw>
<for flavor="IN">
<var>${person}</var>
<value>@{p_list_person}</value>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x1037398b0&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${person.birthday}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.586" level="INFO">${birthday} = 23101985</msg>
<status status="PASS" starttime="20220718 11:15:54.585" endtime="20220718 11:15:54.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${salary}</var>
<arg>${person.salary}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.587" level="INFO">${salary} = 14928</msg>
<status status="PASS" starttime="20220718 11:15:54.586" endtime="20220718 11:15:54.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tax_pay}</var>
<arg>${person.tax}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.587" level="INFO">${tax_pay} = 2985</msg>
<status status="PASS" starttime="20220718 11:15:54.587" endtime="20220718 11:15:54.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${gender}</var>
<arg>${person.gender}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.588" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.588" endtime="20220718 11:15:54.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.589" level="INFO">${natid} = Jamie_Nguyen1658117754@morgan-thompson.com</msg>
<status status="PASS" starttime="20220718 11:15:54.588" endtime="20220718 11:15:54.589"/>
</kw>
<kw name="Reformat Natid Field With Dolar" library="hero_utils">
<var>${expected_natid}</var>
<arg>${natid}</arg>
<doc>This function is used for reformat the natid, natid will be keep the same 4 first chars, the rest of chars will be set to $.
Example your natid = "john.riel@gmail.com" then after reformat it will be "john$$$$$$$$$$$$$$$"</doc>
<msg timestamp="20220718 11:15:54.589" level="INFO">${expected_natid} = Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$</msg>
<status status="PASS" starttime="20220718 11:15:54.589" endtime="20220718 11:15:54.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.590" level="INFO">${expected_name} = Jamie Nguyen</msg>
<status status="PASS" starttime="20220718 11:15:54.589" endtime="20220718 11:15:54.590"/>
</kw>
<kw name="Calculate Tax Relief" library="CalculatorApiSteps">
<var>${expected_tax_relief}</var>
<arg>${birthday}</arg>
<arg>${salary}</arg>
<arg>${tax_pay}</arg>
<arg>${gender}</arg>
<kw name="Calculate Age Of Person Base On BirthDay" library="CalculatorApiSteps">
<var>${age}</var>
<arg>${p_bithday}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${year}</var>
<arg>${p_birthday}[4:8]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.591" level="INFO">${year} = 1985</msg>
<status status="PASS" starttime="20220718 11:15:54.591" endtime="20220718 11:15:54.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${month}</var>
<arg>${p_birthday}[2:4]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.592" level="INFO">${month} = 10</msg>
<status status="PASS" starttime="20220718 11:15:54.591" endtime="20220718 11:15:54.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${day}</var>
<arg>${p_birthday}[0:2]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.592" level="INFO">${day} = 23</msg>
<status status="PASS" starttime="20220718 11:15:54.592" endtime="20220718 11:15:54.592"/>
</kw>
<kw name="Get Age Base On Bithday" library="hero_utils">
<var>${age}</var>
<arg>${day}</arg>
<arg>${month}</arg>
<arg>${year}</arg>
<doc>This function will calculate your age.
:param day: day of your birthday
:param month: month of your birthday
:param year: year of your birthday
:return: your age.</doc>
<msg timestamp="20220718 11:15:54.593" level="INFO">${age} = 36</msg>
<status status="PASS" starttime="20220718 11:15:54.592" endtime="20220718 11:15:54.593"/>
</kw>
<msg timestamp="20220718 11:15:54.593" level="INFO">${age} = 36</msg>
<status status="PASS" starttime="20220718 11:15:54.591" endtime="20220718 11:15:54.593"/>
</kw>
<kw name="Calculate Variable" library="CalculatorApiSteps">
<var>${variable}</var>
<arg>${age}</arg>
<if>
<branch type="IF" condition="${p_age} &lt;= 18">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.593" endtime="20220718 11:15:54.593"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.593" endtime="20220718 11:15:54.593"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 18 and ${p_age} &lt;= 35">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.594"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.594"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 35 and ${p_age} &lt;= 50">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.594" level="INFO">${variable} = 0.5</msg>
<status status="PASS" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.594"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.594"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 50 and ${p_age} &lt;= 75">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.595"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.594" endtime="20220718 11:15:54.595"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.595" endtime="20220718 11:15:54.595"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.595" endtime="20220718 11:15:54.595"/>
</branch>
<status status="PASS" starttime="20220718 11:15:54.593" endtime="20220718 11:15:54.595"/>
</if>
<msg timestamp="20220718 11:15:54.595" level="INFO">${variable} = 0.5</msg>
<status status="PASS" starttime="20220718 11:15:54.593" endtime="20220718 11:15:54.595"/>
</kw>
<kw name="Calculate Gender Bonus" library="CalculatorApiSteps">
<var>${gender_bonus}</var>
<arg>${p_gender}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>'${p_gender}'=='F'</arg>
<arg>500</arg>
<arg>0</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.596" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.596" endtime="20220718 11:15:54.596"/>
</kw>
<msg timestamp="20220718 11:15:54.596" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.595" endtime="20220718 11:15:54.596"/>
</kw>
<kw name="Calculate Tax Relief Base On Salary Tax Variable Gender Bonus" library="hero_utils">
<var>${tax_relief}</var>
<arg>${p_salary}</arg>
<arg>${p_tax_paid}</arg>
<arg>${variable}</arg>
<arg>${gender_bonus}</arg>
<doc>This function is used for calculate tax relief amount
:param salary: of working class hero
:param tax_paid: of working class hero
:param variable: check function variable
:param gender_bonus: addition bonus base on gender
:return: tax relief amount</doc>
<msg timestamp="20220718 11:15:54.597" level="INFO">${tax_relief} = 5971.50</msg>
<status status="PASS" starttime="20220718 11:15:54.596" endtime="20220718 11:15:54.597"/>
</kw>
<msg timestamp="20220718 11:15:54.597" level="INFO">${expected_tax_relief} = 5971.50</msg>
<status status="PASS" starttime="20220718 11:15:54.590" endtime="20220718 11:15:54.597"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Jamie Nguyen', 'relief': '5971.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.617" level="INFO">${actual_natid} = ['Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.597" endtime="20220718 11:15:54.617"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.634" level="INFO">${actual_name} = ['Jamie Nguyen']</msg>
<status status="PASS" starttime="20220718 11:15:54.618" endtime="20220718 11:15:54.634"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_relief}</var>
<arg>${item}</arg>
<arg>$.relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.652" level="INFO">${actual_relief} = ['5971.00']</msg>
<status status="PASS" starttime="20220718 11:15:54.635" endtime="20220718 11:15:54.652"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}'=='${actual_natid[0]}' and '${expected_tax_relief[:-3]}'=='${actual_relief}[0][:-3]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.656" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:15:54.652" endtime="20220718 11:15:54.656"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:15:54.656" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:15:54.656" endtime="20220718 11:15:54.656"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.597" endtime="20220718 11:15:54.656"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.597" endtime="20220718 11:15:54.656"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.657" endtime="20220718 11:15:54.657"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.585" endtime="20220718 11:15:54.657"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103739760&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${person.birthday}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.658" level="INFO">${birthday} = 24051974</msg>
<status status="PASS" starttime="20220718 11:15:54.657" endtime="20220718 11:15:54.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${salary}</var>
<arg>${person.salary}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.658" level="INFO">${salary} = 23704</msg>
<status status="PASS" starttime="20220718 11:15:54.658" endtime="20220718 11:15:54.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tax_pay}</var>
<arg>${person.tax}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.659" level="INFO">${tax_pay} = 7111</msg>
<status status="PASS" starttime="20220718 11:15:54.659" endtime="20220718 11:15:54.659"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${gender}</var>
<arg>${person.gender}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.660" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.659" endtime="20220718 11:15:54.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.661" level="INFO">${natid} = Michael_Washington1658117754@hill.com</msg>
<status status="PASS" starttime="20220718 11:15:54.660" endtime="20220718 11:15:54.661"/>
</kw>
<kw name="Reformat Natid Field With Dolar" library="hero_utils">
<var>${expected_natid}</var>
<arg>${natid}</arg>
<doc>This function is used for reformat the natid, natid will be keep the same 4 first chars, the rest of chars will be set to $.
Example your natid = "john.riel@gmail.com" then after reformat it will be "john$$$$$$$$$$$$$$$"</doc>
<msg timestamp="20220718 11:15:54.661" level="INFO">${expected_natid} = Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$</msg>
<status status="PASS" starttime="20220718 11:15:54.661" endtime="20220718 11:15:54.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.662" level="INFO">${expected_name} = Michael Washington</msg>
<status status="PASS" starttime="20220718 11:15:54.661" endtime="20220718 11:15:54.662"/>
</kw>
<kw name="Calculate Tax Relief" library="CalculatorApiSteps">
<var>${expected_tax_relief}</var>
<arg>${birthday}</arg>
<arg>${salary}</arg>
<arg>${tax_pay}</arg>
<arg>${gender}</arg>
<kw name="Calculate Age Of Person Base On BirthDay" library="CalculatorApiSteps">
<var>${age}</var>
<arg>${p_bithday}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${year}</var>
<arg>${p_birthday}[4:8]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.663" level="INFO">${year} = 1974</msg>
<status status="PASS" starttime="20220718 11:15:54.663" endtime="20220718 11:15:54.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${month}</var>
<arg>${p_birthday}[2:4]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.663" level="INFO">${month} = 05</msg>
<status status="PASS" starttime="20220718 11:15:54.663" endtime="20220718 11:15:54.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${day}</var>
<arg>${p_birthday}[0:2]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.663" level="INFO">${day} = 24</msg>
<status status="PASS" starttime="20220718 11:15:54.663" endtime="20220718 11:15:54.663"/>
</kw>
<kw name="Get Age Base On Bithday" library="hero_utils">
<var>${age}</var>
<arg>${day}</arg>
<arg>${month}</arg>
<arg>${year}</arg>
<doc>This function will calculate your age.
:param day: day of your birthday
:param month: month of your birthday
:param year: year of your birthday
:return: your age.</doc>
<msg timestamp="20220718 11:15:54.664" level="INFO">${age} = 48</msg>
<status status="PASS" starttime="20220718 11:15:54.664" endtime="20220718 11:15:54.664"/>
</kw>
<msg timestamp="20220718 11:15:54.664" level="INFO">${age} = 48</msg>
<status status="PASS" starttime="20220718 11:15:54.662" endtime="20220718 11:15:54.664"/>
</kw>
<kw name="Calculate Variable" library="CalculatorApiSteps">
<var>${variable}</var>
<arg>${age}</arg>
<if>
<branch type="IF" condition="${p_age} &lt;= 18">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.664" endtime="20220718 11:15:54.665"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.664" endtime="20220718 11:15:54.665"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 18 and ${p_age} &lt;= 35">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 35 and ${p_age} &lt;= 50">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.665" level="INFO">${variable} = 0.5</msg>
<status status="PASS" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</branch>
<branch type="ELSE IF" condition="${p_age} &gt; 50 and ${p_age} &lt;= 75">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.665"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.666" endtime="20220718 11:15:54.666"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.665" endtime="20220718 11:15:54.666"/>
</branch>
<status status="PASS" starttime="20220718 11:15:54.664" endtime="20220718 11:15:54.666"/>
</if>
<msg timestamp="20220718 11:15:54.666" level="INFO">${variable} = 0.5</msg>
<status status="PASS" starttime="20220718 11:15:54.664" endtime="20220718 11:15:54.666"/>
</kw>
<kw name="Calculate Gender Bonus" library="CalculatorApiSteps">
<var>${gender_bonus}</var>
<arg>${p_gender}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>'${p_gender}'=='F'</arg>
<arg>500</arg>
<arg>0</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.666" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.666" endtime="20220718 11:15:54.666"/>
</kw>
<msg timestamp="20220718 11:15:54.667" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.666" endtime="20220718 11:15:54.667"/>
</kw>
<kw name="Calculate Tax Relief Base On Salary Tax Variable Gender Bonus" library="hero_utils">
<var>${tax_relief}</var>
<arg>${p_salary}</arg>
<arg>${p_tax_paid}</arg>
<arg>${variable}</arg>
<arg>${gender_bonus}</arg>
<doc>This function is used for calculate tax relief amount
:param salary: of working class hero
:param tax_paid: of working class hero
:param variable: check function variable
:param gender_bonus: addition bonus base on gender
:return: tax relief amount</doc>
<msg timestamp="20220718 11:15:54.667" level="INFO">${tax_relief} = 8296.50</msg>
<status status="PASS" starttime="20220718 11:15:54.667" endtime="20220718 11:15:54.667"/>
</kw>
<msg timestamp="20220718 11:15:54.667" level="INFO">${expected_tax_relief} = 8296.50</msg>
<status status="PASS" starttime="20220718 11:15:54.662" endtime="20220718 11:15:54.667"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Jamie Nguyen', 'relief': '5971.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.685" level="INFO">${actual_natid} = ['Jami$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.667" endtime="20220718 11:15:54.685"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.702" level="INFO">${actual_name} = ['Jamie Nguyen']</msg>
<status status="PASS" starttime="20220718 11:15:54.685" endtime="20220718 11:15:54.702"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_relief}</var>
<arg>${item}</arg>
<arg>$.relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.719" level="INFO">${actual_relief} = ['5971.00']</msg>
<status status="PASS" starttime="20220718 11:15:54.702" endtime="20220718 11:15:54.719"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}'=='${actual_natid[0]}' and '${expected_tax_relief[:-3]}'=='${actual_relief}[0][:-3]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.720" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:15:54.719" endtime="20220718 11:15:54.720"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:15:54.720" endtime="20220718 11:15:54.721"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.667" endtime="20220718 11:15:54.721"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Michael Washington', 'relief': '8296.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.737" level="INFO">${actual_natid} = ['Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:15:54.721" endtime="20220718 11:15:54.737"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.755" level="INFO">${actual_name} = ['Michael Washington']</msg>
<status status="PASS" starttime="20220718 11:15:54.738" endtime="20220718 11:15:54.755"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_relief}</var>
<arg>${item}</arg>
<arg>$.relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:15:54.771" level="INFO">${actual_relief} = ['8296.00']</msg>
<status status="PASS" starttime="20220718 11:15:54.755" endtime="20220718 11:15:54.771"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}'=='${actual_natid[0]}' and '${expected_tax_relief[:-3]}'=='${actual_relief}[0][:-3]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:15:54.773" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:15:54.771" endtime="20220718 11:15:54.773"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:15:54.773" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:15:54.773" endtime="20220718 11:15:54.773"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.721" endtime="20220718 11:15:54.773"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.667" endtime="20220718 11:15:54.773"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.773" endtime="20220718 11:15:54.774"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.657" endtime="20220718 11:15:54.774"/>
</iter>
<status status="PASS" starttime="20220718 11:15:54.585" endtime="20220718 11:15:54.774"/>
</for>
<status status="PASS" starttime="20220718 11:15:54.584" endtime="20220718 11:15:54.774"/>
</kw>
<doc>This test case is used for test api query the tax relief of each person via API
Pre-condition: we will send request to clear our database first.
Step 1: we need to generate list of number person we will insert (just for data testing)
Step 2: we send request api insert list working hero class on step 1
Step 3: we will got response status code and response content from response of step 2
Step 4: assert the status code is 202 and content is 'Alright'
Step 5: we will send request to get tax relief, we will have a list a tax relief
Step 6: we will velidate if our data insert (on step 1: name, natid, relief amount) exist on the list relief of step 5
Note: in this case i only compare the integer part, I dont validate the decimal part, cause i am not aware how rounding in code dev.</doc>
<tag>api</tag>
<tag>calculator</tag>
<status status="PASS" starttime="20220718 11:15:54.549" endtime="20220718 11:15:54.774"/>
</test>
<test id="s1-s1-s1-t4" name="As the Clerk, I can not insert a working class hero into database with invalid birthday via an API" line="84">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.779" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.779" endtime="20220718 11:15:54.779"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.780" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.779" endtime="20220718 11:15:54.780"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.786" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.786" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.780" endtime="20220718 11:15:54.786"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.779" endtime="20220718 11:15:54.787"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.787" level="INFO">${birthday} = </msg>
<status status="PASS" starttime="20220718 11:15:54.787" endtime="20220718 11:15:54.787"/>
</kw>
<kw name="Generate A Random Name" library="CommonSteps">
<var>${name}</var>
<doc>This keyword is used for genarating a random name</doc>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220718 11:15:54.788" level="INFO">${name} = Jesse Silva</msg>
<status status="PASS" starttime="20220718 11:15:54.788" endtime="20220718 11:15:54.788"/>
</kw>
<msg timestamp="20220718 11:15:54.788" level="INFO">${name} = Jesse Silva</msg>
<status status="PASS" starttime="20220718 11:15:54.787" endtime="20220718 11:15:54.788"/>
</kw>
<kw name="Generate A Random Gender" library="CommonSteps">
<var>${gender}</var>
<doc>This keyword is used for genarating a random gender, only return 'M' or 'F'</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${gender}</var>
<arg>random.choice(['M', 'F'])</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.789" level="INFO">${gender} = F</msg>
<status status="PASS" starttime="20220718 11:15:54.789" endtime="20220718 11:15:54.789"/>
</kw>
<msg timestamp="20220718 11:15:54.789" level="INFO">${gender} = F</msg>
<status status="PASS" starttime="20220718 11:15:54.788" endtime="20220718 11:15:54.789"/>
</kw>
<kw name="Generate A Random Natural ID Code" library="CommonSteps">
<var>${natid}</var>
<arg>${name}</arg>
<doc>This keyword is used for genarating a random natural ID , actually it will return an unique email.</doc>
<kw name="Free Email Domain" library="FakerLibrary">
<var>${email_domain}</var>
<msg timestamp="20220718 11:15:54.789" level="INFO">${email_domain} = yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.789" endtime="20220718 11:15:54.789"/>
</kw>
<kw name="Replace String" library="String">
<var>${p_name}</var>
<arg>${p_name}</arg>
<arg>${SPACE}</arg>
<arg>.</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220718 11:15:54.790" level="INFO">${p_name} = Jesse.Silva</msg>
<status status="PASS" starttime="20220718 11:15:54.790" endtime="20220718 11:15:54.790"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${epoch_time}</var>
<arg>int(time.time())</arg>
<arg>time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.790" level="INFO">${epoch_time} = 1658117754</msg>
<status status="PASS" starttime="20220718 11:15:54.790" endtime="20220718 11:15:54.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${email}</var>
<arg>${p_name}_${epoch_time}@${email_domain}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.790" level="INFO">${email} = Jesse.Silva_1658117754@yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.790" endtime="20220718 11:15:54.790"/>
</kw>
<msg timestamp="20220718 11:15:54.791" level="INFO">${natid} = Jesse.Silva_1658117754@yahoo.com</msg>
<status status="PASS" starttime="20220718 11:15:54.789" endtime="20220718 11:15:54.791"/>
</kw>
<kw name="Generate A Random Salary" library="CommonSteps">
<var>${salary}</var>
<doc>This keyword is used for genarating a random salary, salary will in range 3,000 (USD) to 30,000 (USD)</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${salary}</var>
<arg>random.randint(3000,30000)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.791" level="INFO">${salary} = 5647</msg>
<status status="PASS" starttime="20220718 11:15:54.791" endtime="20220718 11:15:54.791"/>
</kw>
<msg timestamp="20220718 11:15:54.791" level="INFO">${salary} = 5647</msg>
<status status="PASS" starttime="20220718 11:15:54.791" endtime="20220718 11:15:54.791"/>
</kw>
<kw name="Generate A Tax Base On Salary" library="CommonSteps">
<var>${tax}</var>
<arg>${salary}</arg>
<doc>This keyword is used for genarating a tax based on the salary provide as paramter
if salary &lt;4,000 then tax percent is 0% of salary, mean they dont have to pay tax
if 4,000 &lt;= salary &lt;10,000 then tax percent is 10% of salary
if 10,000 &lt;= salary &lt;20,000 then tax percent is 20% of salary
rest, if salary ablove 20,000 then tax percent is 30% of salary
first we will count tax percent base on the salary then , we will count the tax amount and round to integer and return.</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.792" level="INFO">${tax_percent} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.792" endtime="20220718 11:15:54.792"/>
</kw>
<if>
<branch type="IF" condition="${p_salary} &lt; 4000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.792" endtime="20220718 11:15:54.792"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.792" endtime="20220718 11:15:54.792"/>
</branch>
<branch type="ELSE IF" condition="${p_salary} &gt;= 4000 and ${p_salary} &lt; 10000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.793" level="INFO">${tax_percent} = 10</msg>
<status status="PASS" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</branch>
<branch type="ELSE IF" condition="${p_salary} &gt;= 10000 and ${p_salary} &lt; 20000">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>20</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${tax_percent}</var>
<arg>30</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</kw>
<status status="NOT RUN" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.793"/>
</branch>
<status status="PASS" starttime="20220718 11:15:54.792" endtime="20220718 11:15:54.793"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${tax_amount}</var>
<arg>${tax_percent} * ${p_salary} / 100</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.794" level="INFO">${tax_amount} = 564.7</msg>
<status status="PASS" starttime="20220718 11:15:54.793" endtime="20220718 11:15:54.794"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${tax_amount}</var>
<arg>${tax_amount}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220718 11:15:54.794" level="INFO">${tax_amount} = 564</msg>
<status status="PASS" starttime="20220718 11:15:54.794" endtime="20220718 11:15:54.794"/>
</kw>
<msg timestamp="20220718 11:15:54.794" level="INFO">${tax} = 564</msg>
<status status="PASS" starttime="20220718 11:15:54.791" endtime="20220718 11:15:54.794"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${response}</var>
<arg>Make POST Request To Insert A Person</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Make POST Request To Insert A Person" library="CalculatorApiSteps">
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>This keyword is used for sending a POST request to create new person</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.795" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.795" endtime="20220718 11:15:54.796"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.796" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.796" endtime="20220718 11:15:54.796"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${json}</var>
<arg>birthday=${p_birthday}</arg>
<arg>gender=${p_gender}</arg>
<arg>name=${p_name}</arg>
<arg>natid=${p_natid}</arg>
<arg>salary=${p_salary}</arg>
<arg>tax=${p_tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.797" level="INFO">${json} = {'birthday': '', 'gender': 'F', 'name': 'Jesse Silva', 'natid': 'Jesse.Silva_1658117754@yahoo.com', 'salary': 5647, 'tax': 564}</msg>
<status status="PASS" starttime="20220718 11:15:54.796" endtime="20220718 11:15:54.797"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_CALCULATOR_INSERT}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.804" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '127'} 
 body=b'{"birthday": "", "gender": "F", "name": "Jesse Silva", "natid": "Jesse.Silva_1658117754@yahoo.com", "salary": 5647, "tax": 564}' 
 </msg>
<msg timestamp="20220718 11:15:54.805" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-07-18T04:15:54.803+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220718 11:15:54.805" level="FAIL">HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert</msg>
<status status="FAIL" starttime="20220718 11:15:54.797" endtime="20220718 11:15:54.808"/>
</kw>
<status status="FAIL" starttime="20220718 11:15:54.795" endtime="20220718 11:15:54.808"/>
</kw>
<msg timestamp="20220718 11:15:54.809" level="INFO">${response} = ('FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert')</msg>
<status status="PASS" starttime="20220718 11:15:54.794" endtime="20220718 11:15:54.809"/>
</kw>
<kw name="Assert Response Error" library="CommonSteps">
<arg>${response}</arg>
<kw name="Convert To List" library="Collections">
<var>${list}</var>
<arg>${p_response}</arg>
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<msg timestamp="20220718 11:15:54.809" level="INFO">${list} = ['FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert']</msg>
<status status="PASS" starttime="20220718 11:15:54.809" endtime="20220718 11:15:54.809"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${list}[0]'=='FAIL'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.809" endtime="20220718 11:15:54.810"/>
</kw>
<kw name="Should Start With" library="BuiltIn">
<arg>${list}[1]</arg>
<arg>HTTPError: 500 Server Error:</arg>
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<status status="PASS" starttime="20220718 11:15:54.810" endtime="20220718 11:15:54.810"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.809" endtime="20220718 11:15:54.810"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response_tax_relief}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.811" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.811" endtime="20220718 11:15:54.811"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.811" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.811" endtime="20220718 11:15:54.811"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.817" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.817" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20220718 11:15:54.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.812" endtime="20220718 11:15:54.818"/>
</kw>
<msg timestamp="20220718 11:15:54.818" level="INFO">${response_tax_relief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.810" endtime="20220718 11:15:54.818"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response_tax_relief}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.819" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.818" endtime="20220718 11:15:54.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.820" level="INFO">${content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.819" endtime="20220718 11:15:54.820"/>
</kw>
<msg timestamp="20220718 11:15:54.820" level="INFO">${actual_code} = 200</msg>
<msg timestamp="20220718 11:15:54.820" level="INFO">${actual_content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.818" endtime="20220718 11:15:54.820"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>200</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.821" endtime="20220718 11:15:54.821"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.820" endtime="20220718 11:15:54.821"/>
</kw>
<kw name="Assert Tax Relief Is Empty" library="CalculatorApiSteps">
<arg>${actual_content}</arg>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_response_content_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.822" level="INFO">${json} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.822" endtime="20220718 11:15:54.822"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${json}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220718 11:15:54.823" level="INFO">Length is 0</msg>
<msg timestamp="20220718 11:15:54.823" level="INFO">${len} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.823" endtime="20220718 11:15:54.823"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${len}==0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.823" endtime="20220718 11:15:54.823"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.822" endtime="20220718 11:15:54.823"/>
</kw>
<doc>This test case is used for test api insert 1 working hero class but invalid birthday
Pre-condition: we will delete all data in DB.
Step 1: generate data but for birthday is empty
Step 2: send request to insert working class hero
Step 3: assert response error
Step 4: send query to get tax relief list
Step 5: assert response of step 4 is empty due to there is no record is inserted.</doc>
<tag>api</tag>
<tag>calculator</tag>
<status status="PASS" starttime="20220718 11:15:54.776" endtime="20220718 11:15:54.824"/>
</test>
<test id="s1-s1-s1-t5" name="As the Clerk, I can not insert a working class hero into database with invalid salary via an API" line="107">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.829" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.829" endtime="20220718 11:15:54.829"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.829" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.829" endtime="20220718 11:15:54.829"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.835" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.835" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.830" endtime="20220718 11:15:54.835"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.828" endtime="20220718 11:15:54.836"/>
</kw>
<kw name="Generate A Random Birthday" library="CommonSteps">
<var>${birthday}</var>
<doc>This keyword is used for genarating a random birthday which age &gt;=18 and age&lt;=80</doc>
<kw name="Date Of Birth" library="FakerLibrary">
<var>${date}</var>
<arg>minimum_age=18</arg>
<arg>maximum_age=80</arg>
<doc>Generate a random date of birth represented as a Date object,
constrained by optional miminimum_age and maximum_age
parameters.</doc>
<msg timestamp="20220718 11:15:54.837" level="INFO">${date} = 1944-09-23</msg>
<status status="PASS" starttime="20220718 11:15:54.836" endtime="20220718 11:15:54.837"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220718 11:15:54.837" level="INFO">${date} = 1944-09-23</msg>
<status status="PASS" starttime="20220718 11:15:54.837" endtime="20220718 11:15:54.837"/>
</kw>
<kw name="Split String" library="String">
<var>${arr}</var>
<arg>${date}</arg>
<arg>separator=-</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20220718 11:15:54.838" level="INFO">${arr} = ['1944', '09', '23']</msg>
<status status="PASS" starttime="20220718 11:15:54.837" endtime="20220718 11:15:54.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${arr[2]}${arr[1]}${arr[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.839" level="INFO">${birthday} = 23091944</msg>
<status status="PASS" starttime="20220718 11:15:54.838" endtime="20220718 11:15:54.839"/>
</kw>
<msg timestamp="20220718 11:15:54.840" level="INFO">${birthday} = 23091944</msg>
<status status="PASS" starttime="20220718 11:15:54.836" endtime="20220718 11:15:54.840"/>
</kw>
<kw name="Generate A Random Name" library="CommonSteps">
<var>${name}</var>
<doc>This keyword is used for genarating a random name</doc>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220718 11:15:54.841" level="INFO">${name} = Ryan Bennett</msg>
<status status="PASS" starttime="20220718 11:15:54.840" endtime="20220718 11:15:54.841"/>
</kw>
<msg timestamp="20220718 11:15:54.841" level="INFO">${name} = Ryan Bennett</msg>
<status status="PASS" starttime="20220718 11:15:54.840" endtime="20220718 11:15:54.841"/>
</kw>
<kw name="Generate A Random Gender" library="CommonSteps">
<var>${gender}</var>
<doc>This keyword is used for genarating a random gender, only return 'M' or 'F'</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${gender}</var>
<arg>random.choice(['M', 'F'])</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.842" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.841" endtime="20220718 11:15:54.842"/>
</kw>
<msg timestamp="20220718 11:15:54.842" level="INFO">${gender} = M</msg>
<status status="PASS" starttime="20220718 11:15:54.841" endtime="20220718 11:15:54.842"/>
</kw>
<kw name="Generate A Random Natural ID Code" library="CommonSteps">
<var>${natid}</var>
<arg>${name}</arg>
<doc>This keyword is used for genarating a random natural ID , actually it will return an unique email.</doc>
<kw name="Free Email Domain" library="FakerLibrary">
<var>${email_domain}</var>
<msg timestamp="20220718 11:15:54.843" level="INFO">${email_domain} = gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.843" endtime="20220718 11:15:54.843"/>
</kw>
<kw name="Replace String" library="String">
<var>${p_name}</var>
<arg>${p_name}</arg>
<arg>${SPACE}</arg>
<arg>.</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220718 11:15:54.843" level="INFO">${p_name} = Ryan.Bennett</msg>
<status status="PASS" starttime="20220718 11:15:54.843" endtime="20220718 11:15:54.843"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${epoch_time}</var>
<arg>int(time.time())</arg>
<arg>time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.844" level="INFO">${epoch_time} = 1658117754</msg>
<status status="PASS" starttime="20220718 11:15:54.843" endtime="20220718 11:15:54.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${email}</var>
<arg>${p_name}_${epoch_time}@${email_domain}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.844" level="INFO">${email} = Ryan.Bennett_1658117754@gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.844" endtime="20220718 11:15:54.844"/>
</kw>
<msg timestamp="20220718 11:15:54.845" level="INFO">${natid} = Ryan.Bennett_1658117754@gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.842" endtime="20220718 11:15:54.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${salary}</var>
<arg>aaabbb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.845" level="INFO">${salary} = aaabbb</msg>
<status status="PASS" starttime="20220718 11:15:54.845" endtime="20220718 11:15:54.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tax}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.845" level="INFO">${tax} = 500</msg>
<status status="PASS" starttime="20220718 11:15:54.845" endtime="20220718 11:15:54.845"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${response}</var>
<arg>Make POST Request To Insert A Person</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Make POST Request To Insert A Person" library="CalculatorApiSteps">
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>This keyword is used for sending a POST request to create new person</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.846" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.846" endtime="20220718 11:15:54.847"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.847" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.847" endtime="20220718 11:15:54.847"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${json}</var>
<arg>birthday=${p_birthday}</arg>
<arg>gender=${p_gender}</arg>
<arg>name=${p_name}</arg>
<arg>natid=${p_natid}</arg>
<arg>salary=${p_salary}</arg>
<arg>tax=${p_tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.848" level="INFO">${json} = {'birthday': '23091944', 'gender': 'M', 'name': 'Ryan Bennett', 'natid': 'Ryan.Bennett_1658117754@gmail.com', 'salary': 'aaabbb', 'tax': '500'}</msg>
<status status="PASS" starttime="20220718 11:15:54.848" endtime="20220718 11:15:54.848"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_CALCULATOR_INSERT}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.857" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '143'} 
 body=b'{"birthday": "23091944", "gender": "M", "name": "Ryan Bennett", "natid": "Ryan.Bennett_1658117754@gmail.com", "salary": "aaabbb", "tax": "500"}' 
 </msg>
<msg timestamp="20220718 11:15:54.857" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-07-18T04:15:54.855+0000","status":500,"error":"Internal Server Error","message":"Character a is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220718 11:15:54.857" level="FAIL">HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert</msg>
<status status="FAIL" starttime="20220718 11:15:54.849" endtime="20220718 11:15:54.857"/>
</kw>
<status status="FAIL" starttime="20220718 11:15:54.846" endtime="20220718 11:15:54.858"/>
</kw>
<msg timestamp="20220718 11:15:54.858" level="INFO">${response} = ('FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert')</msg>
<status status="PASS" starttime="20220718 11:15:54.845" endtime="20220718 11:15:54.858"/>
</kw>
<kw name="Assert Response Error" library="CommonSteps">
<arg>${response}</arg>
<kw name="Convert To List" library="Collections">
<var>${list}</var>
<arg>${p_response}</arg>
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<msg timestamp="20220718 11:15:54.859" level="INFO">${list} = ['FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert']</msg>
<status status="PASS" starttime="20220718 11:15:54.859" endtime="20220718 11:15:54.859"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${list}[0]'=='FAIL'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.859" endtime="20220718 11:15:54.859"/>
</kw>
<kw name="Should Start With" library="BuiltIn">
<arg>${list}[1]</arg>
<arg>HTTPError: 500 Server Error:</arg>
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<status status="PASS" starttime="20220718 11:15:54.859" endtime="20220718 11:15:54.860"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.858" endtime="20220718 11:15:54.860"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response_tax_relief}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.860" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.860" endtime="20220718 11:15:54.861"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.861" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.861" endtime="20220718 11:15:54.861"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.869" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.869" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20220718 11:15:54.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.861" endtime="20220718 11:15:54.869"/>
</kw>
<msg timestamp="20220718 11:15:54.870" level="INFO">${response_tax_relief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.860" endtime="20220718 11:15:54.870"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response_tax_relief}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.871" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.870" endtime="20220718 11:15:54.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.872" level="INFO">${content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.871" endtime="20220718 11:15:54.872"/>
</kw>
<msg timestamp="20220718 11:15:54.872" level="INFO">${actual_code} = 200</msg>
<msg timestamp="20220718 11:15:54.872" level="INFO">${actual_content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.870" endtime="20220718 11:15:54.872"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>200</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.873" endtime="20220718 11:15:54.874"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.873" endtime="20220718 11:15:54.874"/>
</kw>
<kw name="Assert Tax Relief Is Empty" library="CalculatorApiSteps">
<arg>${actual_content}</arg>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_response_content_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.874" level="INFO">${json} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.874" endtime="20220718 11:15:54.874"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${json}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220718 11:15:54.875" level="INFO">Length is 0</msg>
<msg timestamp="20220718 11:15:54.875" level="INFO">${len} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.875" endtime="20220718 11:15:54.875"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${len}==0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.875" endtime="20220718 11:15:54.875"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.874" endtime="20220718 11:15:54.875"/>
</kw>
<doc>This test case is used for test api insert 1 working hero class but invalid salary
Pre-condition: we will delete all data in DB.
Step 1: generate data but for salary is 'aaabbbb' not a number.
Step 2: send request to insert working class hero
Step 3: assert response error
Step 4: send query to get tax relief list
Step 5: assert response of step 4 is empty due to there is no record is inserted.</doc>
<tag>api</tag>
<tag>calculator</tag>
<status status="PASS" starttime="20220718 11:15:54.826" endtime="20220718 11:15:54.875"/>
</test>
<test id="s1-s1-s1-t6" name="As the Clerk, I can not insert a working class hero into database with empty salary via an API" line="129">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.880" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.880" endtime="20220718 11:15:54.880"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.881" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.880" endtime="20220718 11:15:54.881"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.887" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.887" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:54.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.881" endtime="20220718 11:15:54.887"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.880" endtime="20220718 11:15:54.888"/>
</kw>
<kw name="Generate A Random Birthday" library="CommonSteps">
<var>${birthday}</var>
<doc>This keyword is used for genarating a random birthday which age &gt;=18 and age&lt;=80</doc>
<kw name="Date Of Birth" library="FakerLibrary">
<var>${date}</var>
<arg>minimum_age=18</arg>
<arg>maximum_age=80</arg>
<doc>Generate a random date of birth represented as a Date object,
constrained by optional miminimum_age and maximum_age
parameters.</doc>
<msg timestamp="20220718 11:15:54.888" level="INFO">${date} = 1949-08-11</msg>
<status status="PASS" starttime="20220718 11:15:54.888" endtime="20220718 11:15:54.889"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220718 11:15:54.889" level="INFO">${date} = 1949-08-11</msg>
<status status="PASS" starttime="20220718 11:15:54.889" endtime="20220718 11:15:54.889"/>
</kw>
<kw name="Split String" library="String">
<var>${arr}</var>
<arg>${date}</arg>
<arg>separator=-</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20220718 11:15:54.890" level="INFO">${arr} = ['1949', '08', '11']</msg>
<status status="PASS" starttime="20220718 11:15:54.889" endtime="20220718 11:15:54.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${birthday}</var>
<arg>${arr[2]}${arr[1]}${arr[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.891" level="INFO">${birthday} = 11081949</msg>
<status status="PASS" starttime="20220718 11:15:54.890" endtime="20220718 11:15:54.891"/>
</kw>
<msg timestamp="20220718 11:15:54.892" level="INFO">${birthday} = 11081949</msg>
<status status="PASS" starttime="20220718 11:15:54.888" endtime="20220718 11:15:54.892"/>
</kw>
<kw name="Generate A Random Name" library="CommonSteps">
<var>${name}</var>
<doc>This keyword is used for genarating a random name</doc>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220718 11:15:54.893" level="INFO">${name} = Laura Padilla</msg>
<status status="PASS" starttime="20220718 11:15:54.892" endtime="20220718 11:15:54.893"/>
</kw>
<msg timestamp="20220718 11:15:54.894" level="INFO">${name} = Laura Padilla</msg>
<status status="PASS" starttime="20220718 11:15:54.892" endtime="20220718 11:15:54.894"/>
</kw>
<kw name="Generate A Random Gender" library="CommonSteps">
<var>${gender}</var>
<doc>This keyword is used for genarating a random gender, only return 'M' or 'F'</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${gender}</var>
<arg>random.choice(['M', 'F'])</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.895" level="INFO">${gender} = F</msg>
<status status="PASS" starttime="20220718 11:15:54.895" endtime="20220718 11:15:54.895"/>
</kw>
<msg timestamp="20220718 11:15:54.895" level="INFO">${gender} = F</msg>
<status status="PASS" starttime="20220718 11:15:54.894" endtime="20220718 11:15:54.895"/>
</kw>
<kw name="Generate A Random Natural ID Code" library="CommonSteps">
<var>${natid}</var>
<arg>${name}</arg>
<doc>This keyword is used for genarating a random natural ID , actually it will return an unique email.</doc>
<kw name="Free Email Domain" library="FakerLibrary">
<var>${email_domain}</var>
<msg timestamp="20220718 11:15:54.896" level="INFO">${email_domain} = gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.896" endtime="20220718 11:15:54.896"/>
</kw>
<kw name="Replace String" library="String">
<var>${p_name}</var>
<arg>${p_name}</arg>
<arg>${SPACE}</arg>
<arg>.</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220718 11:15:54.897" level="INFO">${p_name} = Laura.Padilla</msg>
<status status="PASS" starttime="20220718 11:15:54.897" endtime="20220718 11:15:54.897"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${epoch_time}</var>
<arg>int(time.time())</arg>
<arg>time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:54.897" level="INFO">${epoch_time} = 1658117754</msg>
<status status="PASS" starttime="20220718 11:15:54.897" endtime="20220718 11:15:54.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${email}</var>
<arg>${p_name}_${epoch_time}@${email_domain}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.898" level="INFO">${email} = Laura.Padilla_1658117754@gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.898" endtime="20220718 11:15:54.898"/>
</kw>
<msg timestamp="20220718 11:15:54.898" level="INFO">${natid} = Laura.Padilla_1658117754@gmail.com</msg>
<status status="PASS" starttime="20220718 11:15:54.896" endtime="20220718 11:15:54.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${salary}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.899" level="INFO">${salary} = </msg>
<status status="PASS" starttime="20220718 11:15:54.899" endtime="20220718 11:15:54.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tax}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.900" level="INFO">${tax} = 500</msg>
<status status="PASS" starttime="20220718 11:15:54.899" endtime="20220718 11:15:54.900"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${response}</var>
<arg>Make POST Request To Insert A Person</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Make POST Request To Insert A Person" library="CalculatorApiSteps">
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<doc>This keyword is used for sending a POST request to create new person</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.901" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.901" endtime="20220718 11:15:54.901"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.902" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.902" endtime="20220718 11:15:54.902"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${json}</var>
<arg>birthday=${p_birthday}</arg>
<arg>gender=${p_gender}</arg>
<arg>name=${p_name}</arg>
<arg>natid=${p_natid}</arg>
<arg>salary=${p_salary}</arg>
<arg>tax=${p_tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.903" level="INFO">${json} = {'birthday': '11081949', 'gender': 'F', 'name': 'Laura Padilla', 'natid': 'Laura.Padilla_1658117754@gmail.com', 'salary': '', 'tax': '500'}</msg>
<status status="PASS" starttime="20220718 11:15:54.902" endtime="20220718 11:15:54.903"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_CALCULATOR_INSERT}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.911" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '139'} 
 body=b'{"birthday": "11081949", "gender": "F", "name": "Laura Padilla", "natid": "Laura.Padilla_1658117754@gmail.com", "salary": "", "tax": "500"}' 
 </msg>
<msg timestamp="20220718 11:15:54.911" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-07-18T04:15:54.909+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220718 11:15:54.911" level="FAIL">HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert</msg>
<status status="FAIL" starttime="20220718 11:15:54.903" endtime="20220718 11:15:54.912"/>
</kw>
<status status="FAIL" starttime="20220718 11:15:54.900" endtime="20220718 11:15:54.912"/>
</kw>
<msg timestamp="20220718 11:15:54.912" level="INFO">${response} = ('FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert')</msg>
<status status="PASS" starttime="20220718 11:15:54.900" endtime="20220718 11:15:54.912"/>
</kw>
<kw name="Assert Response Error" library="CommonSteps">
<arg>${response}</arg>
<kw name="Convert To List" library="Collections">
<var>${list}</var>
<arg>${p_response}</arg>
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<msg timestamp="20220718 11:15:54.913" level="INFO">${list} = ['FAIL', 'HTTPError: 500 Server Error:  for url: http://localhost:8080/calculator/insert']</msg>
<status status="PASS" starttime="20220718 11:15:54.913" endtime="20220718 11:15:54.913"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${list}[0]'=='FAIL'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.913" endtime="20220718 11:15:54.914"/>
</kw>
<kw name="Should Start With" library="BuiltIn">
<arg>${list}[1]</arg>
<arg>HTTPError: 500 Server Error:</arg>
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<status status="PASS" starttime="20220718 11:15:54.914" endtime="20220718 11:15:54.914"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.912" endtime="20220718 11:15:54.914"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response_tax_relief}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.915" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.915" endtime="20220718 11:15:54.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.915" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.915" endtime="20220718 11:15:54.915"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:54.922" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:54.922" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20220718 11:15:54.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.916" endtime="20220718 11:15:54.922"/>
</kw>
<msg timestamp="20220718 11:15:54.922" level="INFO">${response_tax_relief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.914" endtime="20220718 11:15:54.923"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response_tax_relief}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.924" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:15:54.923" endtime="20220718 11:15:54.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:54.925" level="INFO">${content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.924" endtime="20220718 11:15:54.925"/>
</kw>
<msg timestamp="20220718 11:15:54.925" level="INFO">${actual_code} = 200</msg>
<msg timestamp="20220718 11:15:54.925" level="INFO">${actual_content} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.923" endtime="20220718 11:15:54.925"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>200</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.926" endtime="20220718 11:15:54.926"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.925" endtime="20220718 11:15:54.926"/>
</kw>
<kw name="Assert Tax Relief Is Empty" library="CalculatorApiSteps">
<arg>${actual_content}</arg>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_response_content_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:15:54.927" level="INFO">${json} = []</msg>
<status status="PASS" starttime="20220718 11:15:54.927" endtime="20220718 11:15:54.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${json}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220718 11:15:54.927" level="INFO">Length is 0</msg>
<msg timestamp="20220718 11:15:54.927" level="INFO">${len} = 0</msg>
<status status="PASS" starttime="20220718 11:15:54.927" endtime="20220718 11:15:54.927"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${len}==0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:15:54.928" endtime="20220718 11:15:54.928"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.926" endtime="20220718 11:15:54.928"/>
</kw>
<doc>This test case is used for test api insert 1 working hero class but invalid salary
Pre-condition: we will delete all data in DB.
Step 1: generate data but for salary is 'aaabbbb' not a number.
Step 2: send request to insert working class hero
Step 3: assert response error
Step 4: send query to get tax relief list
Step 5: assert response of step 4 is empty due to there is no record is inserted.</doc>
<tag>api</tag>
<tag>calculator</tag>
<tag>temp</tag>
<status status="PASS" starttime="20220718 11:15:54.878" endtime="20220718 11:15:54.928"/>
</test>
<doc>This test suite contains all api test cases related to Calculator features.</doc>
<status status="PASS" starttime="20220718 11:15:52.855" endtime="20220718 11:15:54.931"/>
</suite>
<status status="PASS" starttime="20220718 11:15:52.854" endtime="20220718 11:15:54.933"/>
</suite>
<suite id="s1-s2" name="Fe" source="/Users/admin/Downloads/assign/Cognizant/Oppenheimer/testsuites/fe">
<suite id="s1-s2-s1" name="CalculatorFeTestsuite" source="/Users/admin/Downloads/assign/Cognizant/Oppenheimer/testsuites/fe/CalculatorFeTestsuite.robot">
<test id="s1-s2-s1-t1" name="As the Clerk, I should be able to upload a csv file to a portal to populate into database" line="15">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:15:54.994" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:15:54.994" endtime="20220718 11:15:54.994"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:15:54.995" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:15:54.994" endtime="20220718 11:15:54.995"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:15:55.000" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:15:55.000" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:15:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:15:55.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:15:54.995" endtime="20220718 11:15:55.000"/>
</kw>
<status status="PASS" starttime="20220718 11:15:54.993" endtime="20220718 11:15:55.001"/>
</kw>
<kw name="Get Location Of Test Data CSV" library="CalculatorFeSteps">
<var>${test_data_location}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${current_dir}</var>
<arg>/Users/admin/Downloads/assign/Cognizant/Oppenheimer/stepdefinition/fe</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:55.001" level="INFO">${current_dir} = /Users/admin/Downloads/assign/Cognizant/Oppenheimer/stepdefinition/fe</msg>
<status status="PASS" starttime="20220718 11:15:55.001" endtime="20220718 11:15:55.002"/>
</kw>
<kw name="Get Index Of String" library="hero_utils">
<var>${index}</var>
<arg>${current_dir}</arg>
<arg>stepdefinition</arg>
<doc>this function is used for search substring in parent string
:param parent_str: parent string
:param sub_str: search string
:return: index of found search string</doc>
<msg timestamp="20220718 11:15:55.002" level="INFO">${index} = 52</msg>
<status status="PASS" starttime="20220718 11:15:55.002" endtime="20220718 11:15:55.002"/>
</kw>
<kw name="Get Substring" library="String">
<var>${sub_str}</var>
<arg>${current_dir}</arg>
<arg>0</arg>
<arg>${index}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220718 11:15:55.002" level="INFO">${sub_str} = /Users/admin/Downloads/assign/Cognizant/Oppenheimer/</msg>
<status status="PASS" starttime="20220718 11:15:55.002" endtime="20220718 11:15:55.002"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${test_data_location}</var>
<arg>${sub_str}</arg>
<arg>resources</arg>
<arg>testdata</arg>
<arg>importcsv</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20220718 11:15:55.003" level="INFO">${test_data_location} = /Users/admin/Downloads/assign/Cognizant/Oppenheimer/resources/testdata/importcsv</msg>
<status status="PASS" starttime="20220718 11:15:55.003" endtime="20220718 11:15:55.003"/>
</kw>
<msg timestamp="20220718 11:15:55.003" level="INFO">${test_data_location} = /Users/admin/Downloads/assign/Cognizant/Oppenheimer/resources/testdata/importcsv</msg>
<status status="PASS" starttime="20220718 11:15:55.001" endtime="20220718 11:15:55.003"/>
</kw>
<kw name="Delete Existing CSV File" library="CalculatorFeSteps">
<arg>${test_data_location}</arg>
<kw name="Remove File" library="OperatingSystem">
<arg>${p_location}/*.csv</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20220718 11:15:55.005" level="INFO" html="true">Removed file '&lt;a href="file:///Users/admin/Downloads/assign/Cognizant/Oppenheimer/resources/testdata/importcsv/data.csv"&gt;/Users/admin/Downloads/assign/Cognizant/Oppenheimer/resources/testdata/importcsv/data.csv&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220718 11:15:55.004" endtime="20220718 11:15:55.005"/>
</kw>
<status status="PASS" starttime="20220718 11:15:55.003" endtime="20220718 11:15:55.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file_name}</var>
<arg>data.csv</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:55.005" level="INFO">${file_name} = data.csv</msg>
<status status="PASS" starttime="20220718 11:15:55.005" endtime="20220718 11:15:55.005"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number}</var>
<arg>random.randint(2,5)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:15:55.006" level="INFO">${number} = 5</msg>
<status status="PASS" starttime="20220718 11:15:55.006" endtime="20220718 11:15:55.006"/>
</kw>
<kw name="Generate List Random Person" library="CommonSteps">
<var>${list_person_data}</var>
<arg>${number}</arg>
<kw name="Generate Random List Working Class Hero" library="hero_utils">
<var>${list_person}</var>
<arg>${p_number_of_person}</arg>
<msg timestamp="20220718 11:15:55.009" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x1038502b0&gt;, &lt;models.hero.WorkingClassHero object at 0x1038504f0&gt;, &lt;models.hero.WorkingClassHero object at 0x103850220&gt;, &lt;models.hero.WorkingClassHero object ...</msg>
<status status="PASS" starttime="20220718 11:15:55.006" endtime="20220718 11:15:55.009"/>
</kw>
<msg timestamp="20220718 11:15:55.010" level="INFO">${list_person_data} = [&lt;models.hero.WorkingClassHero object at 0x1038502b0&gt;, &lt;models.hero.WorkingClassHero object at 0x1038504f0&gt;, &lt;models.hero.WorkingClassHero object at 0x103850220&gt;, &lt;models.hero.WorkingClassHero object ...</msg>
<status status="PASS" starttime="20220718 11:15:55.006" endtime="20220718 11:15:55.010"/>
</kw>
<kw name="Generate Data To CSV File" library="CalculatorFeSteps">
<arg>${test_data_location}</arg>
<arg>${file_name}</arg>
<arg>${list_person_data}</arg>
<kw name="Write Data To Csv File" library="hero_utils">
<arg>${p_location}</arg>
<arg>${p_file_name}</arg>
<arg>${p_list_person}</arg>
<doc>This function is used for write data to csv file
:param location: location of file csv
:param file_name: the file name of csv
:param list_data_person: list data working class here we will insert to csv
:return: None</doc>
<msg timestamp="20220718 11:15:55.011" level="INFO">[['Kyle_Mccoy1658117755@banks.com', 'Kyle Mccoy', 'F', '40455', '27041999', '12136'], ['Valerie_Nash1658117755@palmer-farley.com', 'Valerie Nash', 'M', '15443', '24091986', '3088'], ['Michael_Macdonald1658117755@montes.org', 'Michael Macdonald', 'M', '22767', '11051966', '6830'], ['Hunter_Taylor1658117755@pierce.org', 'Hunter Taylor', 'M', '28085', '28091993', '8425'], ['Leslie_Martinez1658117755@payne-lee.com', 'Leslie Martinez', 'M', '3445', '24061967', '0']]
['Kyle_Mccoy1658117755@banks.com', 'Kyle Mccoy', 'F', '40455', '27041999', '12136']
['Valerie_Nash1658117755@palmer-farley.com', 'Valerie Nash', 'M', '15443', '24091986', '3088']
['Michael_Macdonald1658117755@montes.org', 'Michael Macdonald', 'M', '22767', '11051966', '6830']
['Hunter_Taylor1658117755@pierce.org', 'Hunter Taylor', 'M', '28085', '28091993', '8425']
['Leslie_Martinez1658117755@payne-lee.com', 'Leslie Martinez', 'M', '3445', '24061967', '0']</msg>
<status status="PASS" starttime="20220718 11:15:55.010" endtime="20220718 11:15:55.011"/>
</kw>
<status status="PASS" starttime="20220718 11:15:55.010" endtime="20220718 11:15:55.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${csv_file}</var>
<arg>${test_data_location}/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:55.012" level="INFO">${csv_file} = /Users/admin/Downloads/assign/Cognizant/Oppenheimer/resources/testdata/importcsv/data.csv</msg>
<status status="PASS" starttime="20220718 11:15:55.011" endtime="20220718 11:15:55.012"/>
</kw>
<kw name="Open Browser And Go To Application" library="CommonSteps">
<arg>${BASE_URL}</arg>
<kw name="Open Browser" library="Browser">
<arg>${p_url}</arg>
<arg>browser=${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20220718 11:15:55.013" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20220718 11:15:55.013" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0, "tracesDir": "/Users/admin/Downloads/assign/Cognizant/Oppenheimer/Reports/browser/traces/d58b7f43-cdc2-49e9-9e25-3936053e455d"}</msg>
<msg timestamp="20220718 11:15:55.473" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0,"tracesDir":"/Users/admin/Downloads/assign/Cognizant/Oppenheimer/Reports/browser/traces/d58b7f43-cdc2-49e9-9e25-3936053e455d"}</msg>
<msg timestamp="20220718 11:15:55.473" level="INFO">{"acceptDownloads": true, "ignoreHTTPSErrors": false, "bypassCSP": true, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false, "reducedMotion": "no-preference", "forcedColors": "none"}</msg>
<msg timestamp="20220718 11:15:55.498" level="INFO">Successfully created context. </msg>
<msg timestamp="20220718 11:15:55.498" level="INFO">{'acceptDownloads': True, 'ignoreHTTPSErrors': False, 'bypassCSP': True, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'hideRfBrowser': False, 'reducedMotion': 'no-preference', 'forcedColors': 'none'}</msg>
<msg timestamp="20220718 11:15:57.018" level="INFO">Successfully initialized new page object and opened url: http://localhost:8080/</msg>
<status status="PASS" starttime="20220718 11:15:55.012" endtime="20220718 11:15:57.018"/>
</kw>
<status status="PASS" starttime="20220718 11:15:55.012" endtime="20220718 11:15:57.019"/>
</kw>
<kw name="Upload CSV File" library="CalculatorFeSteps">
<arg>${csv_file}</arg>
<kw name="Select CSV File To Upload" library="IndexPage">
<arg>${p_csv_file}</arg>
<doc>This keyword is used for upload file csv. Argument is the file csv (file name with path)</doc>
<kw name="Get File Upload Textbox" library="IndexPage">
<var>${element}</var>
<doc>This keyword is used for getting the element upload file</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${txt_input_file}</var>
<arg>css=input[type=file]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:15:57.021" level="INFO">${txt_input_file} = css=input[type=file]</msg>
<status status="PASS" starttime="20220718 11:15:57.021" endtime="20220718 11:15:57.021"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${txt_input_file}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20220718 11:15:57.050" level="INFO">Waited for Element with selector css=input[type=file] at state visible</msg>
<status status="PASS" starttime="20220718 11:15:57.021" endtime="20220718 11:15:57.050"/>
</kw>
<msg timestamp="20220718 11:15:57.050" level="INFO">${element} = css=input[type=file]</msg>
<status status="PASS" starttime="20220718 11:15:57.020" endtime="20220718 11:15:57.050"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>${p_csv_file}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20220718 11:15:57.051" endtime="20220718 11:15:57.070"/>
</kw>
<status status="PASS" starttime="20220718 11:15:57.020" endtime="20220718 11:15:57.071"/>
</kw>
<status status="PASS" starttime="20220718 11:15:57.019" endtime="20220718 11:15:57.071"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220718 11:16:27.073" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20220718 11:15:57.071" endtime="20220718 11:16:27.074"/>
</kw>
<kw name="Make Post Request To Get Tax Relief" library="CalculatorApiSteps">
<var>${response_tax_relief}</var>
<doc>This keyword is used for sending a GET request to get all current tax relief</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:16:27.075" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:16:27.075" endtime="20220718 11:16:27.075"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:16:27.076" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:16:27.076" endtime="20220718 11:16:27.076"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_TAX_RELIEF}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:16:27.086" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:16:27.086" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 18 Jul 2022 04:16:27 GMT'} 
 body=[{"natid":"Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Kyle Mccoy","relief":"23155.00"},{"natid":"Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Valerie Nash","relief":"9884.00"},{"natid":"Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Michael Macdonald","relief":"5848.88"},{"natid":"Hunt$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Hunter Taylor","relief":"15728.00"},{"natid":"Lesl$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Leslie Martinez","relief":"1264.00"}] 
 </msg>
<msg timestamp="20220718 11:16:27.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:16:27.076" endtime="20220718 11:16:27.086"/>
</kw>
<msg timestamp="20220718 11:16:27.086" level="INFO">${response_tax_relief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:16:27.074" endtime="20220718 11:16:27.086"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code_tax_relief}</var>
<var>${actual_content_tax_relief}</var>
<arg>${response_tax_relief}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.088" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20220718 11:16:27.087" endtime="20220718 11:16:27.088"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.089" level="INFO">${content} = [{"natid":"Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Kyle Mccoy","relief":"23155.00"},{"natid":"Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Valerie Nash","relief":"9884.00"},{"natid":"Mich$$$$$$$$...</msg>
<status status="PASS" starttime="20220718 11:16:27.088" endtime="20220718 11:16:27.089"/>
</kw>
<msg timestamp="20220718 11:16:27.089" level="INFO">${actual_code_tax_relief} = 200</msg>
<msg timestamp="20220718 11:16:27.089" level="INFO">${actual_content_tax_relief} = [{"natid":"Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Kyle Mccoy","relief":"23155.00"},{"natid":"Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$","name":"Valerie Nash","relief":"9884.00"},{"natid":"Mich$$$$$$$$...</msg>
<status status="PASS" starttime="20220718 11:16:27.087" endtime="20220718 11:16:27.089"/>
</kw>
<kw name="Assert Insert Person To Database Successfully" library="CalculatorApiSteps">
<arg>${actual_content_tax_relief}</arg>
<arg>${list_person_data}</arg>
<doc>This keyword is used for validating if sending post request to insert 1 or multiple person successfully via checking api chekcing</doc>
<kw name="Convert String To JSON" library="JSONLibrary">
<var>${json}</var>
<arg>${p_api_response_content_tax_relief}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220718 11:16:27.091" level="INFO">${json} = [{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}, {'natid': 'Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Valerie Nash', 'relief': '9884.00'}, {'natid': ...</msg>
<status status="PASS" starttime="20220718 11:16:27.090" endtime="20220718 11:16:27.091"/>
</kw>
<for flavor="IN">
<var>${person}</var>
<value>@{p_list_expected_person}</value>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x1038502b0&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.092" level="INFO">${expected_name} = Kyle Mccoy</msg>
<status status="PASS" starttime="20220718 11:16:27.091" endtime="20220718 11:16:27.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.092" level="INFO">${expected_natid} = Kyle_Mccoy1658117755@banks.com</msg>
<status status="PASS" starttime="20220718 11:16:27.092" endtime="20220718 11:16:27.093"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.116" level="INFO">${actual_natid} = ['Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.093" endtime="20220718 11:16:27.116"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.138" level="INFO">${actual_name} = ['Kyle Mccoy']</msg>
<status status="PASS" starttime="20220718 11:16:27.116" endtime="20220718 11:16:27.138"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.139" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:27.138" endtime="20220718 11:16:27.139"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:16:27.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:16:27.139" endtime="20220718 11:16:27.139"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.093" endtime="20220718 11:16:27.140"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.093" endtime="20220718 11:16:27.140"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.140" endtime="20220718 11:16:27.141"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.091" endtime="20220718 11:16:27.141"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x1038504f0&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.142" level="INFO">${expected_name} = Valerie Nash</msg>
<status status="PASS" starttime="20220718 11:16:27.141" endtime="20220718 11:16:27.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.143" level="INFO">${expected_natid} = Valerie_Nash1658117755@palmer-farley.com</msg>
<status status="PASS" starttime="20220718 11:16:27.142" endtime="20220718 11:16:27.143"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.161" level="INFO">${actual_natid} = ['Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.143" endtime="20220718 11:16:27.161"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.178" level="INFO">${actual_name} = ['Kyle Mccoy']</msg>
<status status="PASS" starttime="20220718 11:16:27.161" endtime="20220718 11:16:27.178"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.179" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.178" endtime="20220718 11:16:27.179"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.179" endtime="20220718 11:16:27.179"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.143" endtime="20220718 11:16:27.179"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Valerie Nash', 'relief': '9884.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.196" level="INFO">${actual_natid} = ['Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.179" endtime="20220718 11:16:27.196"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.213" level="INFO">${actual_name} = ['Valerie Nash']</msg>
<status status="PASS" starttime="20220718 11:16:27.196" endtime="20220718 11:16:27.213"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.214" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:27.213" endtime="20220718 11:16:27.214"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:16:27.214" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:16:27.214" endtime="20220718 11:16:27.215"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.179" endtime="20220718 11:16:27.215"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.143" endtime="20220718 11:16:27.215"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.215" endtime="20220718 11:16:27.216"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.141" endtime="20220718 11:16:27.216"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103850220&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.217" level="INFO">${expected_name} = Michael Macdonald</msg>
<status status="PASS" starttime="20220718 11:16:27.216" endtime="20220718 11:16:27.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.217" level="INFO">${expected_natid} = Michael_Macdonald1658117755@montes.org</msg>
<status status="PASS" starttime="20220718 11:16:27.217" endtime="20220718 11:16:27.217"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.234" level="INFO">${actual_natid} = ['Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.218" endtime="20220718 11:16:27.234"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.251" level="INFO">${actual_name} = ['Kyle Mccoy']</msg>
<status status="PASS" starttime="20220718 11:16:27.234" endtime="20220718 11:16:27.251"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.252" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.251" endtime="20220718 11:16:27.252"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.252" endtime="20220718 11:16:27.252"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.217" endtime="20220718 11:16:27.252"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Valerie Nash', 'relief': '9884.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.269" level="INFO">${actual_natid} = ['Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.252" endtime="20220718 11:16:27.269"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.285" level="INFO">${actual_name} = ['Valerie Nash']</msg>
<status status="PASS" starttime="20220718 11:16:27.269" endtime="20220718 11:16:27.285"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.286" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.285" endtime="20220718 11:16:27.286"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.286" endtime="20220718 11:16:27.286"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.252" endtime="20220718 11:16:27.286"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Michael Macdonald', 'relief': '5848.88'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.304" level="INFO">${actual_natid} = ['Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.286" endtime="20220718 11:16:27.304"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.321" level="INFO">${actual_name} = ['Michael Macdonald']</msg>
<status status="PASS" starttime="20220718 11:16:27.304" endtime="20220718 11:16:27.321"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.322" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:27.321" endtime="20220718 11:16:27.322"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:16:27.322" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:16:27.322" endtime="20220718 11:16:27.322"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.286" endtime="20220718 11:16:27.322"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.217" endtime="20220718 11:16:27.322"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.322" endtime="20220718 11:16:27.324"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.216" endtime="20220718 11:16:27.324"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103850040&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.324" level="INFO">${expected_name} = Hunter Taylor</msg>
<status status="PASS" starttime="20220718 11:16:27.324" endtime="20220718 11:16:27.324"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.325" level="INFO">${expected_natid} = Hunter_Taylor1658117755@pierce.org</msg>
<status status="PASS" starttime="20220718 11:16:27.324" endtime="20220718 11:16:27.325"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.342" level="INFO">${actual_natid} = ['Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.325" endtime="20220718 11:16:27.342"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.359" level="INFO">${actual_name} = ['Kyle Mccoy']</msg>
<status status="PASS" starttime="20220718 11:16:27.342" endtime="20220718 11:16:27.359"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.360" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.359" endtime="20220718 11:16:27.360"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.360" endtime="20220718 11:16:27.360"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.325" endtime="20220718 11:16:27.360"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Valerie Nash', 'relief': '9884.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.377" level="INFO">${actual_natid} = ['Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.360" endtime="20220718 11:16:27.377"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.393" level="INFO">${actual_name} = ['Valerie Nash']</msg>
<status status="PASS" starttime="20220718 11:16:27.377" endtime="20220718 11:16:27.393"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.394" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.393" endtime="20220718 11:16:27.394"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.394" endtime="20220718 11:16:27.395"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.360" endtime="20220718 11:16:27.395"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Michael Macdonald', 'relief': '5848.88'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.411" level="INFO">${actual_natid} = ['Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.395" endtime="20220718 11:16:27.411"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.429" level="INFO">${actual_name} = ['Michael Macdonald']</msg>
<status status="PASS" starttime="20220718 11:16:27.412" endtime="20220718 11:16:27.429"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.430" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.429" endtime="20220718 11:16:27.430"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.430" endtime="20220718 11:16:27.430"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.395" endtime="20220718 11:16:27.430"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Hunt$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Hunter Taylor', 'relief': '15728.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.446" level="INFO">${actual_natid} = ['Hunt$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.430" endtime="20220718 11:16:27.446"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.463" level="INFO">${actual_name} = ['Hunter Taylor']</msg>
<status status="PASS" starttime="20220718 11:16:27.447" endtime="20220718 11:16:27.463"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.464" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:27.464" endtime="20220718 11:16:27.464"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:16:27.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:16:27.465" endtime="20220718 11:16:27.465"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.430" endtime="20220718 11:16:27.465"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.325" endtime="20220718 11:16:27.465"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.465" endtime="20220718 11:16:27.466"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.324" endtime="20220718 11:16:27.466"/>
</iter>
<iter>
<var name="${person}">&lt;models.hero.WorkingClassHero object at 0x103850430&gt;</var>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_name}</var>
<arg>${person.name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.467" level="INFO">${expected_name} = Leslie Martinez</msg>
<status status="PASS" starttime="20220718 11:16:27.466" endtime="20220718 11:16:27.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_natid}</var>
<arg>${person.natid}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.468" level="INFO">${expected_natid} = Leslie_Martinez1658117755@payne-lee.com</msg>
<status status="PASS" starttime="20220718 11:16:27.467" endtime="20220718 11:16:27.468"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{json}</value>
<iter>
<var name="${item}">{'natid': 'Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Kyle Mccoy', 'relief': '23155.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.485" level="INFO">${actual_natid} = ['Kyle$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.468" endtime="20220718 11:16:27.485"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.502" level="INFO">${actual_name} = ['Kyle Mccoy']</msg>
<status status="PASS" starttime="20220718 11:16:27.485" endtime="20220718 11:16:27.502"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.503" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.502" endtime="20220718 11:16:27.503"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.503" endtime="20220718 11:16:27.503"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.468" endtime="20220718 11:16:27.503"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Valerie Nash', 'relief': '9884.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.520" level="INFO">${actual_natid} = ['Vale$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.503" endtime="20220718 11:16:27.520"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.536" level="INFO">${actual_name} = ['Valerie Nash']</msg>
<status status="PASS" starttime="20220718 11:16:27.520" endtime="20220718 11:16:27.536"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.537" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.537" endtime="20220718 11:16:27.537"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.538" endtime="20220718 11:16:27.538"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.503" endtime="20220718 11:16:27.538"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Michael Macdonald', 'relief': '5848.88'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.555" level="INFO">${actual_natid} = ['Mich$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.538" endtime="20220718 11:16:27.555"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.572" level="INFO">${actual_name} = ['Michael Macdonald']</msg>
<status status="PASS" starttime="20220718 11:16:27.555" endtime="20220718 11:16:27.572"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.573" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.572" endtime="20220718 11:16:27.573"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.573" endtime="20220718 11:16:27.573"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.538" endtime="20220718 11:16:27.573"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Hunt$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Hunter Taylor', 'relief': '15728.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.589" level="INFO">${actual_natid} = ['Hunt$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.573" endtime="20220718 11:16:27.589"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.606" level="INFO">${actual_name} = ['Hunter Taylor']</msg>
<status status="PASS" starttime="20220718 11:16:27.589" endtime="20220718 11:16:27.606"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.607" level="INFO">${exist} = False</msg>
<status status="PASS" starttime="20220718 11:16:27.606" endtime="20220718 11:16:27.607"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20220718 11:16:27.607" endtime="20220718 11:16:27.607"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.573" endtime="20220718 11:16:27.607"/>
</iter>
<iter>
<var name="${item}">{'natid': 'Lesl$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', 'name': 'Leslie Martinez', 'relief': '1264.00'}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_natid}</var>
<arg>${item}</arg>
<arg>$.natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.625" level="INFO">${actual_natid} = ['Lesl$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$']</msg>
<status status="PASS" starttime="20220718 11:16:27.607" endtime="20220718 11:16:27.625"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_name}</var>
<arg>${item}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220718 11:16:27.641" level="INFO">${actual_name} = ['Leslie Martinez']</msg>
<status status="PASS" starttime="20220718 11:16:27.625" endtime="20220718 11:16:27.642"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${exist}</var>
<arg>'${actual_name}[0]'=='${expected_name}' and '${expected_natid}[0:4]'=='${actual_natid[0]}[0:4]'</arg>
<arg>True</arg>
<arg>False</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220718 11:16:27.642" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:27.642" endtime="20220718 11:16:27.642"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${exist}==True</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20220718 11:16:27.643" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20220718 11:16:27.643" endtime="20220718 11:16:27.643"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.607" endtime="20220718 11:16:27.643"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.468" endtime="20220718 11:16:27.643"/>
</for>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg= Can not found this person in database name: ${person.name} and natid: ${person.natid}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.643" endtime="20220718 11:16:27.644"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.466" endtime="20220718 11:16:27.644"/>
</iter>
<status status="PASS" starttime="20220718 11:16:27.091" endtime="20220718 11:16:27.644"/>
</for>
<status status="PASS" starttime="20220718 11:16:27.090" endtime="20220718 11:16:27.644"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20220718 11:16:27.682" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20220718 11:16:27.645" endtime="20220718 11:16:27.682"/>
</kw>
<doc>This test case is used for testing import csv file with multiple person
Pre-condition: we will clear our database first to avoid duplicate data inserted.
Step 1: we need to know the location of csv file. Current we input the csv file at location: /resource/testdata/importcsv/
Please note that we should name the file is data.csv
Step 2: we will generate a list of person
Step 3: we will clear existing csv file first, then we create new csv file with data is on step 1
Step 4: Open browser and go to our appliation url
Step 5: we will upload file, and wait for 30s to complete process
Step 6: we will send reques to get list of tax relief
Step 7: we will validation our person in step 1 will exist in list tax relief on response of step 6
Step 8: close the browser</doc>
<tag>calculator</tag>
<tag>fe</tag>
<status status="PASS" starttime="20220718 11:15:54.991" endtime="20220718 11:16:27.683"/>
</test>
<test id="s1-s2-s1-t2" name="As the Governor, I should be able to see a button on the screen so that I can dispense tax relief for my working class heroes" line="43">
<kw name="Make POST Request To Clear Database" library="DatabaseApiSteps" type="SETUP">
<doc>This keyword is used for sending a POST request to clear database</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220718 11:16:27.687" level="INFO">Creating Session using : alias=session, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220718 11:16:27.687" endtime="20220718 11:16:27.687"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=*/*</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220718 11:16:27.688" level="INFO">${headers} = {'accept': '*/*', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220718 11:16:27.687" endtime="20220718 11:16:27.688"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${URI_RAKE_DB}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220718 11:16:27.696" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220718 11:16:27.696" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 18 Jul 2022 04:16:27 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220718 11:16:27.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220718 11:16:27.688" endtime="20220718 11:16:27.696"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.686" endtime="20220718 11:16:27.696"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number}</var>
<arg>random.randint(2,10)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:16:27.697" level="INFO">${number} = 10</msg>
<status status="PASS" starttime="20220718 11:16:27.697" endtime="20220718 11:16:27.697"/>
</kw>
<kw name="Generate List Random Person" library="CommonSteps">
<var>${list_person}</var>
<arg>${number}</arg>
<kw name="Generate Random List Working Class Hero" library="hero_utils">
<var>${list_person}</var>
<arg>${p_number_of_person}</arg>
<msg timestamp="20220718 11:16:27.703" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x103b5e790&gt;, &lt;models.hero.WorkingClassHero object at 0x103b5e7c0&gt;, &lt;models.hero.WorkingClassHero object at 0x103b5e940&gt;, &lt;models.hero.WorkingClassHero object ...</msg>
<status status="PASS" starttime="20220718 11:16:27.698" endtime="20220718 11:16:27.703"/>
</kw>
<msg timestamp="20220718 11:16:27.703" level="INFO">${list_person} = [&lt;models.hero.WorkingClassHero object at 0x103b5e790&gt;, &lt;models.hero.WorkingClassHero object at 0x103b5e7c0&gt;, &lt;models.hero.WorkingClassHero object at 0x103b5e940&gt;, &lt;models.hero.WorkingClassHero object ...</msg>
<status status="PASS" starttime="20220718 11:16:27.697" endtime="20220718 11:16:27.703"/>
</kw>
<kw name="Make POST Request To Insert Multple Person" library="CalculatorApiSteps">
<var>${response}</var>
<arg>${list_person}</arg>
<doc>This keyword is used for sending a POST request to create multiple person</doc>
<kw name="Send Post Request To Insert Multiple Working Hero" library="custom_request">
<var>${response}</var>
<arg>${BASE_URL}</arg>
<arg>${URI_CALCULATOR_INSERT_MULTIPLE}</arg>
<arg>${p_list_person}</arg>
<msg timestamp="20220718 11:16:27.717" level="INFO">&lt;class 'str'&gt;</msg>
<msg timestamp="20220718 11:16:27.717" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:16:27.704" endtime="20220718 11:16:27.717"/>
</kw>
<msg timestamp="20220718 11:16:27.718" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220718 11:16:27.703" endtime="20220718 11:16:27.718"/>
</kw>
<kw name="Get Response Status And Body" library="CommonSteps">
<var>${actual_code}</var>
<var>${actual_content}</var>
<arg>${response}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${code}</var>
<arg>${p_response_api.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.719" level="INFO">${code} = 202</msg>
<status status="PASS" starttime="20220718 11:16:27.718" endtime="20220718 11:16:27.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${content}</var>
<arg>${p_response_api.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:27.720" level="INFO">${content} = Alright</msg>
<status status="PASS" starttime="20220718 11:16:27.719" endtime="20220718 11:16:27.720"/>
</kw>
<msg timestamp="20220718 11:16:27.720" level="INFO">${actual_code} = 202</msg>
<msg timestamp="20220718 11:16:27.720" level="INFO">${actual_content} = Alright</msg>
<status status="PASS" starttime="20220718 11:16:27.718" endtime="20220718 11:16:27.720"/>
</kw>
<kw name="Assert Response Status Is Correct" library="CommonSteps">
<arg>202</arg>
<arg>${actual_code}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_status}'=='${p_actual_status}'</arg>
<arg>msg=Status code return is not correct! Expected '${p_expected_status}' but Actual: '${p_actual_status}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.721" endtime="20220718 11:16:27.722"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.720" endtime="20220718 11:16:27.722"/>
</kw>
<kw name="Assert Response Content Is Correct" library="CommonSteps">
<arg>Alright</arg>
<arg>${actual_content}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>'${p_expected_content}'=='${p_actual_content}'</arg>
<arg>msg=Response return is not correct! Expected '${p_expected_content}' but Actual: '${p_actual_content}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:27.722" endtime="20220718 11:16:27.723"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.722" endtime="20220718 11:16:27.724"/>
</kw>
<kw name="Open Browser And Go To Application" library="CommonSteps">
<arg>${BASE_URL}</arg>
<kw name="Open Browser" library="Browser">
<arg>${p_url}</arg>
<arg>browser=${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.
Use `New Page` directly instead of `Open Browser` for production and automated execution.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20220718 11:16:27.725" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20220718 11:16:27.725" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0, "tracesDir": "/Users/admin/Downloads/assign/Cognizant/Oppenheimer/Reports/browser/traces/3be5585b-cca3-411b-8604-3a4b5941076e"}</msg>
<msg timestamp="20220718 11:16:27.912" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0,"tracesDir":"/Users/admin/Downloads/assign/Cognizant/Oppenheimer/Reports/browser/traces/3be5585b-cca3-411b-8604-3a4b5941076e"}</msg>
<msg timestamp="20220718 11:16:27.912" level="INFO">{"acceptDownloads": true, "ignoreHTTPSErrors": false, "bypassCSP": true, "deviceScaleFactor": 1.0, "isMobile": false, "hasTouch": false, "javaScriptEnabled": true, "offline": false, "hideRfBrowser": false, "reducedMotion": "no-preference", "forcedColors": "none"}</msg>
<msg timestamp="20220718 11:16:27.918" level="INFO">Successfully created context. </msg>
<msg timestamp="20220718 11:16:27.918" level="INFO">{'acceptDownloads': True, 'ignoreHTTPSErrors': False, 'bypassCSP': True, 'deviceScaleFactor': 1, 'isMobile': False, 'hasTouch': False, 'javaScriptEnabled': True, 'offline': False, 'hideRfBrowser': False, 'reducedMotion': 'no-preference', 'forcedColors': 'none'}</msg>
<msg timestamp="20220718 11:16:28.995" level="INFO">Successfully initialized new page object and opened url: http://localhost:8080/</msg>
<status status="PASS" starttime="20220718 11:16:27.724" endtime="20220718 11:16:28.995"/>
</kw>
<status status="PASS" starttime="20220718 11:16:27.724" endtime="20220718 11:16:28.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_color}</var>
<arg>rgb(220, 53, 69)</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:28.995" level="INFO">${expected_color} = rgb(220, 53, 69)</msg>
<status status="PASS" starttime="20220718 11:16:28.995" endtime="20220718 11:16:28.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_text}</var>
<arg>Dispense Now</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:28.996" level="INFO">${expected_text} = Dispense Now</msg>
<status status="PASS" starttime="20220718 11:16:28.996" endtime="20220718 11:16:28.996"/>
</kw>
<kw name="Assert BackGround Color Of Button Dispense Is Correct" library="CalculatorFeSteps">
<arg>${expected_color}</arg>
<kw name="Get BackGround Color Of Disepense Now Button" library="IndexPage">
<var>${actual_color}</var>
<doc>This keyword is used getting background color of "Dispense Now" button.</doc>
<kw name="Get Btn Dispense Now" library="IndexPage">
<var>${btn_dispense_now}</var>
<doc>This keyword is used for getting the element button dispense</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${btn_dispense}</var>
<arg>css=a[href=dispense]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:28.997" level="INFO">${btn_dispense} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:28.997" endtime="20220718 11:16:28.997"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${btn_dispense}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20220718 11:16:29.023" level="INFO">Waited for Element with selector css=a[href=dispense] at state visible</msg>
<status status="PASS" starttime="20220718 11:16:28.998" endtime="20220718 11:16:29.023"/>
</kw>
<msg timestamp="20220718 11:16:29.023" level="INFO">${btn_dispense_now} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:28.997" endtime="20220718 11:16:29.023"/>
</kw>
<kw name="Get Style" library="Browser">
<var>${style}</var>
<arg>${btn_dispense_now}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Gets the computed style properties of the element selected by ``selector``.</doc>
<msg timestamp="20220718 11:16:29.047" level="INFO">${style} = {'accent-color': 'auto', 'align-content': 'normal', 'align-items': 'normal', 'align-self': 'auto', 'alignment-baseline': 'auto', 'animation-delay': '0s', 'animation-direction': 'normal', 'animation-du...</msg>
<status status="PASS" starttime="20220718 11:16:29.023" endtime="20220718 11:16:29.048"/>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<var>${dict}</var>
<arg>${style}</arg>
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<msg timestamp="20220718 11:16:29.048" level="INFO">${dict} = {'accent-color': 'auto', 'align-content': 'normal', 'align-items': 'normal', 'align-self': 'auto', 'alignment-baseline': 'auto', 'animation-delay': '0s', 'animation-direction': 'normal', 'animation-du...</msg>
<status status="PASS" starttime="20220718 11:16:29.048" endtime="20220718 11:16:29.048"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${bgColor}</var>
<arg>${dict}</arg>
<arg>background-color</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220718 11:16:29.049" level="INFO">${bgColor} = rgb(220, 53, 69)</msg>
<status status="PASS" starttime="20220718 11:16:29.048" endtime="20220718 11:16:29.049"/>
</kw>
<msg timestamp="20220718 11:16:29.049" level="INFO">${actual_color} = rgb(220, 53, 69)</msg>
<status status="PASS" starttime="20220718 11:16:28.996" endtime="20220718 11:16:29.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${actual_color}'=='${p_expected_color}'</arg>
<arg>msg=back ground color is not correct. Expected '${p_expected_color}' But actual '${actual_color}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:29.049" endtime="20220718 11:16:29.050"/>
</kw>
<status status="PASS" starttime="20220718 11:16:28.996" endtime="20220718 11:16:29.050"/>
</kw>
<kw name="Assert The Text Of Button Dispense Is Correct" library="CalculatorFeSteps">
<arg>${expected_text}</arg>
<kw name="Get Text Of Dispense Now Button" library="IndexPage">
<var>${actual_text}</var>
<doc>This keyword is used getting text of the button "Dispense Now" and return its text.</doc>
<kw name="Get Btn Dispense Now" library="IndexPage">
<var>${btn_dispense_now}</var>
<doc>This keyword is used for getting the element button dispense</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${btn_dispense}</var>
<arg>css=a[href=dispense]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:29.051" level="INFO">${btn_dispense} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:29.051" endtime="20220718 11:16:29.051"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${btn_dispense}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20220718 11:16:29.056" level="INFO">Waited for Element with selector css=a[href=dispense] at state visible</msg>
<status status="PASS" starttime="20220718 11:16:29.051" endtime="20220718 11:16:29.056"/>
</kw>
<msg timestamp="20220718 11:16:29.057" level="INFO">${btn_dispense_now} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:29.050" endtime="20220718 11:16:29.057"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${text}</var>
<arg>${btn_dispense_now}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20220718 11:16:29.066" level="INFO">${text} = Dispense Now</msg>
<status status="PASS" starttime="20220718 11:16:29.057" endtime="20220718 11:16:29.066"/>
</kw>
<msg timestamp="20220718 11:16:29.067" level="INFO">${actual_text} = Dispense Now</msg>
<status status="PASS" starttime="20220718 11:16:29.050" endtime="20220718 11:16:29.067"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${actual_text}'=='${p_expected_text}'</arg>
<arg>msg=Text of button dispense is not correct. Expected: '${actual_text}' but actual '${p_expected_text}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:29.067" endtime="20220718 11:16:29.067"/>
</kw>
<status status="PASS" starttime="20220718 11:16:29.050" endtime="20220718 11:16:29.068"/>
</kw>
<kw name="Dispense Tax Relieve" library="CalculatorFeSteps">
<kw name="Click Button Dispense Now" library="IndexPage">
<doc>This keyword is used clicking the button "Dispense Now"</doc>
<kw name="Get Btn Dispense Now" library="IndexPage">
<var>${btn_dispense_now}</var>
<doc>This keyword is used for getting the element button dispense</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${btn_dispense}</var>
<arg>css=a[href=dispense]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220718 11:16:29.069" level="INFO">${btn_dispense} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:29.069" endtime="20220718 11:16:29.069"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${btn_dispense}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20220718 11:16:29.074" level="INFO">Waited for Element with selector css=a[href=dispense] at state visible</msg>
<status status="PASS" starttime="20220718 11:16:29.069" endtime="20220718 11:16:29.074"/>
</kw>
<msg timestamp="20220718 11:16:29.075" level="INFO">${btn_dispense_now} = css=a[href=dispense]</msg>
<status status="PASS" starttime="20220718 11:16:29.068" endtime="20220718 11:16:29.075"/>
</kw>
<kw name="Click" library="Browser">
<arg>${btn_dispense_now}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20220718 11:16:29.075" endtime="20220718 11:16:29.145"/>
</kw>
<status status="PASS" starttime="20220718 11:16:29.068" endtime="20220718 11:16:29.145"/>
</kw>
<status status="PASS" starttime="20220718 11:16:29.068" endtime="20220718 11:16:29.145"/>
</kw>
<kw name="Assert Dispense Successfully" library="CalculatorFeSteps">
<kw name="Get Title Of Dispense Page" library="DispensePage">
<var>${title}</var>
<doc>This keyword is used for getting page title and return page title.</doc>
<kw name="Get Title" library="Browser">
<var>${title}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20220718 11:16:29.149" level="INFO">${title} = Dispense!!</msg>
<status status="PASS" starttime="20220718 11:16:29.146" endtime="20220718 11:16:29.149"/>
</kw>
<msg timestamp="20220718 11:16:29.149" level="INFO">${title} = Dispense!!</msg>
<status status="PASS" starttime="20220718 11:16:29.145" endtime="20220718 11:16:29.149"/>
</kw>
<kw name="Get Page Source Of Dispense Page" library="DispensePage">
<var>${source}</var>
<doc>This keyword is used for getting page source and return page source</doc>
<kw name="Get Page Source" library="Browser">
<var>${source}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Gets pages HTML source as a string.</doc>
<msg timestamp="20220718 11:16:29.153" level="INFO">${source} = &lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;
    &lt;title&gt;Dispense!!&lt;/title&gt;
    &lt;link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet"&gt;
    &lt;link href="https://cd...</msg>
<status status="PASS" starttime="20220718 11:16:29.150" endtime="20220718 11:16:29.153"/>
</kw>
<msg timestamp="20220718 11:16:29.153" level="INFO">${source} = &lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;
    &lt;title&gt;Dispense!!&lt;/title&gt;
    &lt;link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet"&gt;
    &lt;link href="https://cd...</msg>
<status status="PASS" starttime="20220718 11:16:29.150" endtime="20220718 11:16:29.153"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${title}'=='Dispense!!'</arg>
<arg>msg=Page title is not correct. Expected 'Dispense!!' but actual '${title}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:29.154" endtime="20220718 11:16:29.154"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${exist}</var>
<arg>"""Cash dispensed""" in """${source}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220718 11:16:29.155" level="INFO">${exist} = True</msg>
<status status="PASS" starttime="20220718 11:16:29.154" endtime="20220718 11:16:29.155"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${exist}==True</arg>
<arg>msg=Page did not contain Cash dispensed!</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220718 11:16:29.155" endtime="20220718 11:16:29.155"/>
</kw>
<status status="PASS" starttime="20220718 11:16:29.145" endtime="20220718 11:16:29.155"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20220718 11:16:29.182" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20220718 11:16:29.156" endtime="20220718 11:16:29.182"/>
</kw>
<doc>This test case is used for testing dispense now function.
Pre-condition: we will clear our database first to avoid duplicate data inserted.
Step 1: we will generate list of insert person
Step 2 : we will send request to insert multiple persons for data testing.
Step 3: we open the browser and validate the color of dispense button is red and the text is "Dispense Now"
Step 4: we will click dispense button and it will navigate to other page.
Step 5: we will wait until page load complete and get source of the page and validate the source page contains the text "Cash dispensed"</doc>
<tag>calculator</tag>
<tag>fe</tag>
<tag>temp</tag>
<status status="PASS" starttime="20220718 11:16:27.684" endtime="20220718 11:16:29.182"/>
</test>
<doc>This test suite contains all front end test cases related to Calculator features.</doc>
<status status="PASS" starttime="20220718 11:15:54.936" endtime="20220718 11:16:29.184"/>
</suite>
<status status="PASS" starttime="20220718 11:15:54.934" endtime="20220718 11:16:29.186"/>
</suite>
<status status="PASS" starttime="20220718 11:15:52.830" endtime="20220718 11:16:29.187"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">api</stat>
<stat pass="8" fail="0" skip="0">calculator</stat>
<stat pass="2" fail="0" skip="0">fe</stat>
<stat pass="2" fail="0" skip="0">temp</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1" name="Api">Testsuites.Api</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s1" name="CalculatorApiTestsuite">Testsuites.Api.CalculatorApiTestsuite</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Fe">Testsuites.Fe</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="CalculatorFeTestsuite">Testsuites.Fe.CalculatorFeTestsuite</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220718 11:15:55.013" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20220718 11:16:27.725" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
</errors>
</robot>
